/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v2/admin/addresses/{id}": {
    /** Retrieves a Address resource. */
    get: operations["admin_getAddressItem"];
    parameters: {};
  };
  "/api/v2/admin/adjustments/{id}": {
    /** Retrieves a Adjustment resource. */
    get: operations["admin_getAdjustmentItem"];
    parameters: {};
  };
  "/api/v2/admin/administrators": {
    /** Retrieves the collection of Administrator resources. */
    get: operations["admin_getAdministratorCollection"];
    /** Creates a Administrator resource. */
    post: operations["admin_postAdministratorCollection"];
    parameters: {};
  };
  "/api/v2/admin/administrators/{id}": {
    /** Retrieves a Administrator resource. */
    get: operations["admin_getAdministratorItem"];
    /** Replaces the Administrator resource. */
    put: operations["admin_putAdministratorItem"];
    /** Removes the Administrator resource. */
    delete: operations["admin_deleteAdministratorItem"];
    parameters: {};
  };
  "/api/v2/admin/avatar-images": {
    /** Creates a AvatarImage resource. */
    post: operations["admin_postAvatarImageCollection"];
    parameters: {};
  };
  "/api/v2/admin/avatar-images/{id}": {
    /** Retrieves a AvatarImage resource. */
    get: operations["admin_getAvatarImageItem"];
    /** Removes the AvatarImage resource. */
    delete: operations["admin_deleteAvatarImageItem"];
    parameters: {};
  };
  "/api/v2/admin/catalog-promotion-actions/{id}": {
    /** Retrieves a CatalogPromotionAction resource. */
    get: operations["admin_getCatalogPromotionActionItem"];
    parameters: {};
  };
  "/api/v2/admin/catalog-promotion-scopes/{id}": {
    /** Retrieves a CatalogPromotionScope resource. */
    get: operations["admin_getCatalogPromotionScopeItem"];
    parameters: {};
  };
  "/api/v2/admin/catalog-promotion-translations/{id}": {
    /** Retrieves a CatalogPromotionTranslation resource. */
    get: operations["admin_getCatalogPromotionTranslationItem"];
    parameters: {};
  };
  "/api/v2/admin/catalog-promotions": {
    /** Retrieves the collection of CatalogPromotion resources. */
    get: operations["admin_getCatalogPromotionCollection"];
    /**
     * Example configuration for `for_variants` scope type:
     *
     * ```
     * {
     *     "type": "for_variants",
     *     "configuration": {
     *         "variants": [
     *             "string"
     *         ]
     *     }
     * }
     * ```
     *
     * Example configuration for `percentage_discount` action type:
     *
     * ```
     * {
     *     "type": "percentage_discount",
     *     "configuration": {
     *         "amount": float
     *     }
     * }
     * ```
     */
    post: operations["admin_postCatalogPromotionCollection"];
    parameters: {};
  };
  "/api/v2/admin/catalog-promotions/{code}": {
    /** Retrieves a CatalogPromotion resource. */
    get: operations["admin_getCatalogPromotionItem"];
    /**
     * Example configuration for `for_variants` scope type:
     *
     * ```
     * {
     *     "type": "for_variants",
     *     "configuration": {
     *         "variants": [
     *             "string"
     *         ]
     *     }
     * }
     * ```
     *
     * Example configuration for `percentage_discount` action type:
     *
     * ```
     * {
     *     "type": "percentage_discount",
     *     "configuration": {
     *         "amount": float
     *     }
     * }
     * ```
     */
    put: operations["admin_putCatalogPromotionItem"];
    parameters: {};
  };
  "/api/v2/admin/channel-pricings/{id}": {
    /** Retrieves a ChannelPricing resource. */
    get: operations["admin_getChannelPricingItem"];
    parameters: {};
  };
  "/api/v2/admin/channels": {
    /** Retrieves the collection of Channel resources. */
    get: operations["admin_getChannelCollection"];
    /** Creates a Channel resource. */
    post: operations["admin_postChannelCollection"];
    parameters: {};
  };
  "/api/v2/admin/channels/{code}": {
    /** Retrieves a Channel resource. */
    get: operations["admin_getChannelItem"];
    parameters: {};
  };
  "/api/v2/admin/channels/{code}/shop-billing-data": {
    /** Retrieves a Channel resource. */
    get: operations["api_channels_shop_billing_data_get_subresourceChannelSubresource"];
    parameters: {};
  };
  "/api/v2/admin/countries": {
    /** Retrieves the collection of Country resources. */
    get: operations["admin_getCountryCollection"];
    /** Creates a Country resource. */
    post: operations["admin_postCountryCollection"];
    parameters: {};
  };
  "/api/v2/admin/countries/{code}": {
    /** Retrieves a Country resource. */
    get: operations["admin_getCountryItem"];
    /** Replaces the Country resource. */
    put: operations["admin_putCountryItem"];
    parameters: {};
  };
  "/api/v2/admin/countries/{code}/provinces": {
    /** Retrieves a Country resource. */
    get: operations["api_countries_provinces_get_subresourceCountrySubresource"];
    parameters: {};
  };
  "/api/v2/admin/currencies": {
    /** Retrieves the collection of Currency resources. */
    get: operations["admin_getCurrencyCollection"];
    /** Creates a Currency resource. */
    post: operations["admin_postCurrencyCollection"];
    parameters: {};
  };
  "/api/v2/admin/currencies/{code}": {
    /** Retrieves a Currency resource. */
    get: operations["admin_getCurrencyItem"];
    parameters: {};
  };
  "/api/v2/admin/customer-groups": {
    /** Retrieves the collection of CustomerGroup resources. */
    get: operations["admin_getCustomerGroupCollection"];
    /** Creates a CustomerGroup resource. */
    post: operations["admin_postCustomerGroupCollection"];
    parameters: {};
  };
  "/api/v2/admin/customer-groups/{code}": {
    /** Retrieves a CustomerGroup resource. */
    get: operations["admin_getCustomerGroupItem"];
    /** Replaces the CustomerGroup resource. */
    put: operations["admin_putCustomerGroupItem"];
    /** Removes the CustomerGroup resource. */
    delete: operations["admin_deleteCustomerGroupItem"];
    parameters: {};
  };
  "/api/v2/admin/customers/{id}": {
    /** Retrieves a Customer resource. */
    get: operations["admin_getCustomerItem"];
    parameters: {};
  };
  "/api/v2/admin/exchange-rates": {
    /** Retrieves the collection of ExchangeRate resources. */
    get: operations["admin_getExchangeRateCollection"];
    /** Creates a ExchangeRate resource. */
    post: operations["admin_postExchangeRateCollection"];
    parameters: {};
  };
  "/api/v2/admin/exchange-rates/{id}": {
    /** Retrieves a ExchangeRate resource. */
    get: operations["admin_getExchangeRateItem"];
    /** Replaces the ExchangeRate resource. */
    put: operations["admin_putExchangeRateItem"];
    /** Removes the ExchangeRate resource. */
    delete: operations["admin_deleteExchangeRateItem"];
    parameters: {};
  };
  "/api/v2/admin/locales": {
    /** Retrieves the collection of Locale resources. */
    get: operations["admin_getLocaleCollection"];
    /** Creates a Locale resource. */
    post: operations["admin_postLocaleCollection"];
    parameters: {};
  };
  "/api/v2/admin/locales/{code}": {
    /** Retrieves a Locale resource. */
    get: operations["admin_getLocaleItem"];
    parameters: {};
  };
  "/api/v2/admin/order-item-units/{id}": {
    /** Retrieves a OrderItemUnit resource. */
    get: operations["admin_getOrderItemUnitItem"];
    parameters: {};
  };
  "/api/v2/admin/order-items/{id}": {
    /** Retrieves a OrderItem resource. */
    get: operations["admin_getOrderItemItem"];
    parameters: {};
  };
  "/api/v2/admin/order-items/{id}/adjustments": {
    /** Retrieves a OrderItem resource. */
    get: operations["api_order_items_adjustments_get_subresourceOrderItemSubresource"];
    parameters: {};
  };
  "/api/v2/admin/orders": {
    /** Retrieves the collection of Order resources. */
    get: operations["admin_getOrderCollection"];
    parameters: {};
  };
  "/api/v2/admin/orders/{tokenValue}": {
    /** Retrieves a Order resource. */
    get: operations["admin_getOrderItem"];
    parameters: {};
  };
  "/api/v2/admin/orders/{tokenValue}/cancel": {
    /** Updates the Order resource. */
    patch: operations["admin_cancelOrderItem"];
    parameters: {};
  };
  "/api/v2/admin/orders/{tokenValue}/payments": {
    /** Retrieves a Order resource. */
    get: operations["api_orders_payments_get_subresourceOrderSubresource"];
    parameters: {};
  };
  "/api/v2/admin/orders/{tokenValue}/shipments": {
    /** Retrieves a Order resource. */
    get: operations["api_orders_shipments_get_subresourceOrderSubresource"];
    parameters: {};
  };
  "/api/v2/admin/payment-methods/{code}": {
    /** Retrieves a PaymentMethod resource. */
    get: operations["admin_getPaymentMethodItem"];
    parameters: {};
  };
  "/api/v2/admin/payments": {
    /** Retrieves the collection of Payment resources. */
    get: operations["admin_getPaymentCollection"];
    parameters: {};
  };
  "/api/v2/admin/payments/{id}": {
    /** Retrieves a Payment resource. */
    get: operations["admin_getPaymentItem"];
    parameters: {};
  };
  "/api/v2/admin/payments/{id}/complete": {
    /** Updates the Payment resource. */
    patch: operations["admin_completePaymentItem"];
    parameters: {};
  };
  "/api/v2/admin/product-association-type-translations/{id}": {
    /** Retrieves a ProductAssociationTypeTranslation resource. */
    get: operations["admin_getProductAssociationTypeTranslationItem"];
    parameters: {};
  };
  "/api/v2/admin/product-association-types": {
    /** Retrieves the collection of ProductAssociationType resources. */
    get: operations["admin_getProductAssociationTypeCollection"];
    /** Creates a ProductAssociationType resource. */
    post: operations["admin_postProductAssociationTypeCollection"];
    parameters: {};
  };
  "/api/v2/admin/product-association-types/{code}": {
    /** Retrieves a ProductAssociationType resource. */
    get: operations["admin_getProductAssociationTypeItem"];
    /** Replaces the ProductAssociationType resource. */
    put: operations["admin_putProductAssociationTypeItem"];
    /** Removes the ProductAssociationType resource. */
    delete: operations["admin_deleteProductAssociationTypeItem"];
    parameters: {};
  };
  "/api/v2/admin/product-images": {
    /** Retrieves the collection of ProductImage resources. */
    get: operations["admin_getProductImageCollection"];
    parameters: {};
  };
  "/api/v2/admin/product-images/{id}": {
    /** Retrieves a ProductImage resource. */
    get: operations["admin_getProductImageItem"];
    parameters: {};
  };
  "/api/v2/admin/product-option-translations/{id}": {
    /** Retrieves a ProductOptionTranslation resource. */
    get: operations["admin_getProductOptionTranslationItem"];
    parameters: {};
  };
  "/api/v2/admin/product-option-values/{code}": {
    /** Retrieves a ProductOptionValue resource. */
    get: operations["admin_getProductOptionValueItem"];
    parameters: {};
  };
  "/api/v2/admin/product-options": {
    /** Retrieves the collection of ProductOption resources. */
    get: operations["admin_getProductOptionCollection"];
    /** Creates a ProductOption resource. */
    post: operations["admin_postProductOptionCollection"];
    parameters: {};
  };
  "/api/v2/admin/product-options/{code}": {
    /** Retrieves a ProductOption resource. */
    get: operations["admin_getProductOptionItem"];
    /** Replaces the ProductOption resource. */
    put: operations["admin_putProductOptionItem"];
    parameters: {};
  };
  "/api/v2/admin/product-options/{code}/values": {
    /** Retrieves a ProductOption resource. */
    get: operations["api_product_options_values_get_subresourceProductOptionSubresource"];
    parameters: {};
  };
  "/api/v2/admin/product-reviews": {
    /** Retrieves the collection of ProductReview resources. */
    get: operations["admin_getProductReviewCollection"];
    parameters: {};
  };
  "/api/v2/admin/product-reviews/{id}": {
    /** Retrieves a ProductReview resource. */
    get: operations["admin_getProductReviewItem"];
    /** Replaces the ProductReview resource. */
    put: operations["admin_putProductReviewItem"];
    /** Removes the ProductReview resource. */
    delete: operations["admin_deleteProductReviewItem"];
    parameters: {};
  };
  "/api/v2/admin/product-reviews/{id}/accept": {
    /** Updates the ProductReview resource. */
    patch: operations["admin_acceptProductReviewItem"];
    parameters: {};
  };
  "/api/v2/admin/product-reviews/{id}/reject": {
    /** Updates the ProductReview resource. */
    patch: operations["admin_rejectProductReviewItem"];
    parameters: {};
  };
  "/api/v2/admin/product-taxons": {
    /** Retrieves the collection of ProductTaxon resources. */
    get: operations["admin_getProductTaxonCollection"];
    parameters: {};
  };
  "/api/v2/admin/product-taxons/{id}": {
    /** Retrieves a ProductTaxon resource. */
    get: operations["admin_getProductTaxonItem"];
    parameters: {};
  };
  "/api/v2/admin/product-translations/{id}": {
    /** Retrieves a ProductTranslation resource. */
    get: operations["admin_getProductTranslationItem"];
    parameters: {};
  };
  "/api/v2/admin/product-variant-translation/{id}": {
    /** Retrieves a ProductVariantTranslation resource. */
    get: operations["admin_getProductVariantTranslationItem"];
    parameters: {};
  };
  "/api/v2/admin/product-variants": {
    /** Retrieves the collection of ProductVariant resources. */
    get: operations["admin_getProductVariantCollection"];
    /** Creates a ProductVariant resource. */
    post: operations["admin_postProductVariantCollection"];
    parameters: {};
  };
  "/api/v2/admin/product-variants/{code}": {
    /** Retrieves a ProductVariant resource. */
    get: operations["admin_getProductVariantItem"];
    /** Replaces the ProductVariant resource. */
    put: operations["admin_putProductVariantItem"];
    parameters: {};
  };
  "/api/v2/admin/products": {
    /** Retrieves the collection of Product resources. */
    get: operations["admin_getProductCollection"];
    /** Creates a Product resource. */
    post: operations["admin_postProductCollection"];
    parameters: {};
  };
  "/api/v2/admin/products/{code}": {
    /** Retrieves a Product resource. */
    get: operations["admin_getProductItem"];
    /** Replaces the Product resource. */
    put: operations["admin_putProductItem"];
    /** Removes the Product resource. */
    delete: operations["admin_deleteProductItem"];
    parameters: {};
  };
  "/api/v2/admin/promotions": {
    /** Retrieves the collection of Promotion resources. */
    get: operations["admin_getPromotionCollection"];
    /** Creates a Promotion resource. */
    post: operations["admin_postPromotionCollection"];
    parameters: {};
  };
  "/api/v2/admin/promotions/{code}": {
    /** Retrieves a Promotion resource. */
    get: operations["admin_getPromotionItem"];
    /** Removes the Promotion resource. */
    delete: operations["admin_deletePromotionItem"];
    parameters: {};
  };
  "/api/v2/admin/provinces/{code}": {
    /** Retrieves a Province resource. */
    get: operations["admin_getProvinceItem"];
    /** Replaces the Province resource. */
    put: operations["admin_putProvinceItem"];
    parameters: {};
  };
  "/api/v2/admin/shipments": {
    /** Retrieves the collection of Shipment resources. */
    get: operations["admin_getShipmentCollection"];
    parameters: {};
  };
  "/api/v2/admin/shipments/{id}": {
    /** Retrieves a Shipment resource. */
    get: operations["admin_getShipmentItem"];
    parameters: {};
  };
  "/api/v2/admin/shipments/{id}/ship": {
    /** Updates the Shipment resource. */
    patch: operations["admin_shipShipmentItem"];
    parameters: {};
  };
  "/api/v2/admin/shipping-categories": {
    /** Retrieves the collection of ShippingCategory resources. */
    get: operations["admin_getShippingCategoryCollection"];
    /** Creates a ShippingCategory resource. */
    post: operations["admin_postShippingCategoryCollection"];
    parameters: {};
  };
  "/api/v2/admin/shipping-categories/{code}": {
    /** Retrieves a ShippingCategory resource. */
    get: operations["admin_getShippingCategoryItem"];
    /** Replaces the ShippingCategory resource. */
    put: operations["admin_putShippingCategoryItem"];
    /** Removes the ShippingCategory resource. */
    delete: operations["admin_deleteShippingCategoryItem"];
    parameters: {};
  };
  "/api/v2/admin/shipping-method-translations/{id}": {
    /** Retrieves a ShippingMethodTranslation resource. */
    get: operations["admin_getShippingMethodTranslationItem"];
    parameters: {};
  };
  "/api/v2/admin/shipping-methods": {
    /** Retrieves the collection of ShippingMethod resources. */
    get: operations["admin_getShippingMethodCollection"];
    /** Creates a ShippingMethod resource. */
    post: operations["admin_postShippingMethodCollection"];
    parameters: {};
  };
  "/api/v2/admin/shipping-methods/{code}": {
    /** Retrieves a ShippingMethod resource. */
    get: operations["admin_getShippingMethodItem"];
    /** Replaces the ShippingMethod resource. */
    put: operations["admin_putShippingMethodItem"];
    /** Removes the ShippingMethod resource. */
    delete: operations["admin_deleteShippingMethodItem"];
    parameters: {};
  };
  "/api/v2/admin/shipping-methods/{code}/archive": {
    /** Updates the ShippingMethod resource. */
    patch: operations["admin_archiveShippingMethodItem"];
    parameters: {};
  };
  "/api/v2/admin/shipping-methods/{code}/restore": {
    /** Updates the ShippingMethod resource. */
    patch: operations["admin_restoreShippingMethodItem"];
    parameters: {};
  };
  "/api/v2/admin/shop-billing-datas/{id}": {
    /** Retrieves a ShopBillingData resource. */
    get: operations["admin_getShopBillingDataItem"];
    parameters: {};
  };
  "/api/v2/admin/tax-categories": {
    /** Retrieves the collection of TaxCategory resources. */
    get: operations["admin_getTaxCategoryCollection"];
    /** Creates a TaxCategory resource. */
    post: operations["admin_postTaxCategoryCollection"];
    parameters: {};
  };
  "/api/v2/admin/tax-categories/{code}": {
    /** Retrieves a TaxCategory resource. */
    get: operations["admin_getTaxCategoryItem"];
    /** Replaces the TaxCategory resource. */
    put: operations["admin_putTaxCategoryItem"];
    /** Removes the TaxCategory resource. */
    delete: operations["admin_deleteTaxCategoryItem"];
    parameters: {};
  };
  "/api/v2/admin/taxon-translations": {
    /** Retrieves the collection of TaxonTranslation resources. */
    get: operations["admin_getTaxonTranslationCollection"];
    parameters: {};
  };
  "/api/v2/admin/taxon-translations/{id}": {
    /** Retrieves a TaxonTranslation resource. */
    get: operations["admin_getTaxonTranslationItem"];
    parameters: {};
  };
  "/api/v2/admin/taxons": {
    /** Retrieves the collection of Taxon resources. */
    get: operations["admin_getTaxonCollection"];
    /** Creates a Taxon resource. */
    post: operations["admin_postTaxonCollection"];
    parameters: {};
  };
  "/api/v2/admin/taxons/{code}": {
    /** Retrieves a Taxon resource. */
    get: operations["admin_getTaxonItem"];
    /** Replaces the Taxon resource. */
    put: operations["admin_putTaxonItem"];
    parameters: {};
  };
  "/api/v2/admin/zone-members/{code}": {
    /** Retrieves a ZoneMember resource. */
    get: operations["admin_getZoneMemberItem"];
    parameters: {};
  };
  "/api/v2/admin/zones": {
    /** Retrieves the collection of Zone resources. */
    get: operations["admin_getZoneCollection"];
    /** Creates a Zone resource. */
    post: operations["admin_postZoneCollection"];
    parameters: {};
  };
  "/api/v2/admin/zones/{code}": {
    /** Retrieves a Zone resource. */
    get: operations["admin_getZoneItem"];
    /** Replaces the Zone resource. */
    put: operations["admin_putZoneItem"];
    /** Removes the Zone resource. */
    delete: operations["admin_deleteZoneItem"];
    parameters: {};
  };
  "/api/v2/admin/zones/{code}/members": {
    /** Retrieves a Zone resource. */
    get: operations["api_zones_members_get_subresourceZoneSubresource"];
    parameters: {};
  };
  "/api/v2/shop/account-verification-requests": {
    /** Creates a VerifyCustomerAccount resource. */
    post: operations["shop_resend_verification_emailVerifyCustomerAccountCollection"];
    parameters: {};
  };
  "/api/v2/shop/account-verification-requests/{token}": {
    /** Updates the VerifyCustomerAccount resource. */
    patch: operations["shop_verify_customer_accountVerifyCustomerAccountItem"];
    parameters: {};
  };
  "/api/v2/shop/account/orders/{tokenValue}/payments/{paymentId}": {
    /** Updates the Order resource. */
    patch: operations["shop_account_change_payment_methodOrderItem"];
    parameters: {};
  };
  "/api/v2/shop/addresses": {
    /** Retrieves the collection of Address resources. */
    get: operations["shop_getAddressCollection"];
    /** Creates a Address resource. */
    post: operations["shop_postAddressCollection"];
    parameters: {};
  };
  "/api/v2/shop/addresses/{id}": {
    /** Retrieves a Address resource. */
    get: operations["shop_getAddressItem"];
    /** Replaces the Address resource. */
    put: operations["shop_putAddressItem"];
    /** Removes the Address resource. */
    delete: operations["shop_deleteAddressItem"];
    parameters: {};
  };
  "/api/v2/shop/adjustments/{id}": {
    /** Retrieves a Adjustment resource. */
    get: operations["shop_getAdjustmentItem"];
    parameters: {};
  };
  "/api/v2/shop/catalog-promotions/{code}": {
    /** Retrieves a CatalogPromotion resource. */
    get: operations["shop_getCatalogPromotionItem"];
    parameters: {};
  };
  "/api/v2/shop/channels/{code}": {
    /** Retrieves a Channel resource. */
    get: operations["shop_getChannelItem"];
    parameters: {};
  };
  "/api/v2/shop/countries": {
    /** Retrieves the collection of Country resources. */
    get: operations["shop_getCountryCollection"];
    parameters: {};
  };
  "/api/v2/shop/countries/{code}": {
    /** Retrieves a Country resource. */
    get: operations["shop_getCountryItem"];
    parameters: {};
  };
  "/api/v2/shop/currencies": {
    /** Retrieves the collection of Currency resources. */
    get: operations["shop_getCurrencyCollection"];
    parameters: {};
  };
  "/api/v2/shop/currencies/{code}": {
    /** Retrieves a Currency resource. */
    get: operations["shop_getCurrencyItem"];
    parameters: {};
  };
  "/api/v2/shop/customers": {
    /** Creates a Customer resource. */
    post: operations["shop_postCustomerCollection"];
    parameters: {};
  };
  "/api/v2/shop/customers/{id}": {
    /** Retrieves a Customer resource. */
    get: operations["shop_getCustomerItem"];
    /** Replaces the Customer resource. */
    put: operations["shop_putCustomerItem"];
    parameters: {};
  };
  "/api/v2/shop/customers/{id}/password": {
    /** Replaces the Customer resource. */
    put: operations["shop_password_updateCustomerItem"];
    parameters: {};
  };
  "/api/v2/shop/locales": {
    /** Retrieves the collection of Locale resources. */
    get: operations["shop_getLocaleCollection"];
    parameters: {};
  };
  "/api/v2/shop/locales/{code}": {
    /** Retrieves a Locale resource. */
    get: operations["shop_getLocaleItem"];
    parameters: {};
  };
  "/api/v2/shop/order-item-units/{id}": {
    /** Retrieves a OrderItemUnit resource. */
    get: operations["shop_getOrderItemUnitItem"];
    parameters: {};
  };
  "/api/v2/shop/order-items/{id}": {
    /** Retrieves a OrderItem resource. */
    get: operations["shop_getOrderItemItem"];
    parameters: {};
  };
  "/api/v2/shop/orders": {
    /** Retrieves the collection of Order resources. */
    get: operations["shop_getOrderCollection"];
    /** Creates a Order resource. */
    post: operations["shop_postOrderCollection"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}": {
    /** Retrieves a Order resource. */
    get: operations["shop_getOrderItem"];
    /** Replaces the Order resource. */
    put: operations["shop_putOrderItem"];
    /** Removes the Order resource. */
    delete: operations["shop_deleteOrderItem"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/adjustments": {
    /** Retrieves a Order resource. */
    get: operations["api_orders_adjustments_get_subresourceOrderSubresource"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/complete": {
    /** Updates the Order resource. */
    patch: operations["shop_completeOrderItem"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/items": {
    /** Retrieves a Order resource. */
    get: operations["api_orders_items_get_subresourceOrderSubresource"];
    /** Creates a Order resource. */
    post: operations["shop_add_itemOrderItem"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/items/{itemId}": {
    /** Removes the Order resource. */
    delete: operations["shop_remove_itemOrderItem"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/items/{items}/adjustments": {
    /** Retrieves a Order resource. */
    get: operations["api_orders_items_adjustments_get_subresourceOrderSubresource"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/items/{orderItemId}": {
    /** Updates the Order resource. */
    patch: operations["shop_change_quantityOrderItem"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/payments/{paymentId}": {
    /** Updates the Order resource. */
    patch: operations["shop_select_payment_methodOrderItem"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/payments/{paymentId}/configuration": {
    /** Retrieves a Order resource. */
    get: operations["get_configurationOrderItem"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/payments/{payments}/methods": {
    /** Retrieves a Order resource. */
    get: operations["api_orders_payments_methods_get_subresourceOrderSubresource"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/shipments/{shipmentId}": {
    /** Updates the Order resource. */
    patch: operations["shop_select_shipping_methodOrderItem"];
    parameters: {};
  };
  "/api/v2/shop/orders/{tokenValue}/shipments/{shipments}/methods": {
    /** Retrieves a Order resource. */
    get: operations["api_orders_shipments_methods_get_subresourceOrderSubresource"];
    parameters: {};
  };
  "/api/v2/shop/payment-methods/{code}": {
    /** Retrieves a PaymentMethod resource. */
    get: operations["shop_getPaymentMethodItem"];
    parameters: {};
  };
  "/api/v2/shop/payments/{id}": {
    /** Retrieves a Payment resource. */
    get: operations["shop_getPaymentItem"];
    parameters: {};
  };
  "/api/v2/shop/payments/{id}/methods": {
    /** Retrieves a Payment resource. */
    get: operations["api_payments_methods_get_subresourcePaymentSubresource"];
    parameters: {};
  };
  "/api/v2/shop/product-images/{id}": {
    /** Retrieves a ProductImage resource. */
    get: operations["shop_getProductImageItem"];
    parameters: {};
  };
  "/api/v2/shop/product-option-values/{code}": {
    /** Retrieves a ProductOptionValue resource. */
    get: operations["shop_getProductOptionValueItem"];
    parameters: {};
  };
  "/api/v2/shop/product-options/{code}": {
    /** Retrieves a ProductOption resource. */
    get: operations["shop_getProductOptionItem"];
    parameters: {};
  };
  "/api/v2/shop/product-reviews": {
    /** Retrieves the collection of ProductReview resources. */
    get: operations["shop_getProductReviewCollection"];
    /** Creates a ProductReview resource. */
    post: operations["shop_postProductReviewCollection"];
    parameters: {};
  };
  "/api/v2/shop/product-reviews/{id}": {
    /** Retrieves a ProductReview resource. */
    get: operations["shop_getProductReviewItem"];
    parameters: {};
  };
  "/api/v2/shop/product-taxons/{id}": {
    /** Retrieves a ProductTaxon resource. */
    get: operations["shop_getProductTaxonItem"];
    parameters: {};
  };
  "/api/v2/shop/product-translations/{id}": {
    /** Retrieves a ProductTranslation resource. */
    get: operations["shop_getProductTranslationItem"];
    parameters: {};
  };
  "/api/v2/shop/product-variant-translation/{id}": {
    /** Retrieves a ProductVariantTranslation resource. */
    get: operations["shop_getProductVariantTranslationItem"];
    parameters: {};
  };
  "/api/v2/shop/product-variants": {
    /** Retrieves the collection of ProductVariant resources. */
    get: operations["shop_getProductVariantCollection"];
    parameters: {};
  };
  "/api/v2/shop/product-variants/{code}": {
    /** Retrieves a ProductVariant resource. */
    get: operations["shop_getProductVariantItem"];
    parameters: {};
  };
  "/api/v2/shop/products": {
    /** Retrieves the collection of Product resources. */
    get: operations["shop_getProductCollection"];
    parameters: {};
  };
  "/api/v2/shop/products-by-slug/{slug}": {
    /** Retrieves a Product resource. */
    get: operations["shop_get_by_slugProductItem"];
    parameters: {};
  };
  "/api/v2/shop/products/{code}": {
    /** Retrieves a Product resource. */
    get: operations["shop_getProductItem"];
    parameters: {};
  };
  "/api/v2/shop/reset-password-requests": {
    /** Creates a ResetPasswordRequest resource. */
    post: operations["shop_create_reset_password_requestResetPasswordRequestCollection"];
    parameters: {};
  };
  "/api/v2/shop/reset-password-requests/{resetPasswordToken}": {
    /** Updates the ResetPasswordRequest resource. */
    patch: operations["shop_update_reset_password_requestResetPasswordRequestItem"];
    parameters: {};
  };
  "/api/v2/shop/shipments/{id}": {
    /** Retrieves a Shipment resource. */
    get: operations["shop_getShipmentItem"];
    parameters: {};
  };
  "/api/v2/shop/shipments/{id}/methods": {
    /** Retrieves a Shipment resource. */
    get: operations["api_shipments_methods_get_subresourceShipmentSubresource"];
    parameters: {};
  };
  "/api/v2/shop/shipping-method-translations/{id}": {
    /** Retrieves a ShippingMethodTranslation resource. */
    get: operations["shop_getShippingMethodTranslationItem"];
    parameters: {};
  };
  "/api/v2/shop/shipping-methods/{code}": {
    /** Retrieves a ShippingMethod resource. */
    get: operations["shop_getShippingMethodItem"];
    parameters: {};
  };
  "/api/v2/shop/taxon-translations/{id}": {
    /** Retrieves a TaxonTranslation resource. */
    get: operations["shop_getTaxonTranslationItem"];
    parameters: {};
  };
  "/api/v2/shop/taxons": {
    /** Retrieves the collection of Taxon resources. */
    get: operations["shop_getTaxonCollection"];
    parameters: {};
  };
  "/api/v2/shop/taxons/{code}": {
    /** Retrieves a Taxon resource. */
    get: operations["shop_getTaxonItem"];
    parameters: {};
  };
}

export interface components {
  schemas: {
    Address: {
      /** Format: iri-reference */
      customer?: string | null;
      id?: number;
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      fullName?: string;
    };
    "Address-admin.address.read": {
      /** Format: iri-reference */
      customer?: string | null;
      id?: number;
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address-admin.order.read": {
      firstName?: string;
      lastName?: string;
      countryCode?: string;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address-shop.address.create": {
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address-shop.address.read": {
      id?: number;
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address-shop.address.update": {
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address-shop.cart.read": {
      firstName?: string;
      lastName?: string;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address-shop.order.account.read": {
      firstName?: string;
      lastName?: string;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      customer?: string | null;
      id?: number;
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      fullName?: string;
    };
    "Address.jsonld-admin.address.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      customer?: string | null;
      id?: number;
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address.jsonld-admin.order.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      firstName?: string;
      lastName?: string;
      countryCode?: string;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address.jsonld-shop.address.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address.jsonld-shop.address.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address.jsonld-shop.address.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      firstName?: string;
      lastName?: string;
      phoneNumber?: string | null;
      company?: string | null;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address.jsonld-shop.cart.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      firstName?: string;
      lastName?: string;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "Address.jsonld-shop.order.account.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      firstName?: string;
      lastName?: string;
      countryCode?: string;
      provinceCode?: string | null;
      provinceName?: string | null;
      street?: string;
      city?: string;
      postcode?: string;
    };
    "AddressInterface-shop.cart.update": { [key: string]: unknown };
    "AddressInterface.jsonld-shop.cart.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
    };
    AdjustableInterface: {
      adjustments?: components["schemas"]["AdjustmentInterface"][];
      adjustmentsTotal?: number;
    };
    "AdjustableInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      adjustments?: components["schemas"]["AdjustmentInterface.jsonld"][];
      adjustmentsTotal?: number;
    };
    Adjustment: {
      /** Format: iri-reference */
      shipment?: string | null;
      id?: number;
      /** Format: iri-reference */
      order?: string | null;
      /** Format: iri-reference */
      orderItem?: string | null;
      /** Format: iri-reference */
      orderItemUnit?: string | null;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
      locked?: boolean;
      originCode?: string | null;
      details?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      adjustable?: Partial<components["schemas"]["AdjustableInterface"]> | null;
      charge?: boolean;
      credit?: boolean;
      order_item?: unknown;
      order_item_unit?: unknown;
    };
    "Adjustment-admin.adjustment.read": {
      id?: number;
      /** Format: iri-reference */
      order?: string | null;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
      locked?: boolean;
      order_item?: unknown;
      order_item_unit?: unknown;
    };
    "Adjustment-shop.adjustment.read": {
      id?: number;
      /** Format: iri-reference */
      order?: string | null;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
      locked?: boolean;
      order_item?: unknown;
      order_item_unit?: unknown;
    };
    "Adjustment-shop.cart.read": {
      id?: number;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
    };
    "Adjustment.jsonld": {
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      shipment?: string | null;
      id?: number;
      /** Format: iri-reference */
      order?: string | null;
      /** Format: iri-reference */
      orderItem?: string | null;
      /** Format: iri-reference */
      orderItemUnit?: string | null;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
      locked?: boolean;
      originCode?: string | null;
      details?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      adjustable?: Partial<
        components["schemas"]["AdjustableInterface.jsonld"]
      > | null;
      charge?: boolean;
      credit?: boolean;
      order_item?: unknown;
      order_item_unit?: unknown;
    };
    "Adjustment.jsonld-admin.adjustment.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: iri-reference */
      order?: string | null;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
      locked?: boolean;
      order_item?: unknown;
      order_item_unit?: unknown;
    };
    "Adjustment.jsonld-shop.adjustment.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: iri-reference */
      order?: string | null;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
      locked?: boolean;
      order_item?: unknown;
      order_item_unit?: unknown;
    };
    "Adjustment.jsonld-shop.cart.read": {
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
    };
    AdjustmentInterface: {
      adjustable?: Partial<components["schemas"]["AdjustableInterface"]> | null;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
      locked?: boolean;
      charge?: boolean;
      credit?: boolean;
      originCode?: string | null;
      /** Format: iri-reference */
      order?: string | null;
      /** Format: iri-reference */
      orderItem?: string | null;
      /** Format: iri-reference */
      orderItemUnit?: string | null;
      details?: string[];
      id?: number;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "AdjustmentInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      adjustable?: Partial<
        components["schemas"]["AdjustableInterface.jsonld"]
      > | null;
      type?: string;
      label?: string | null;
      amount?: number;
      neutral?: boolean;
      locked?: boolean;
      charge?: boolean;
      credit?: boolean;
      originCode?: string | null;
      /** Format: iri-reference */
      order?: string | null;
      /** Format: iri-reference */
      orderItem?: string | null;
      /** Format: iri-reference */
      orderItemUnit?: string | null;
      details?: string[];
      id?: number;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    Administrator: {
      firstName?: string | null;
      lastName?: string | null;
      localeCode?: string;
      /** Format: iri-reference */
      avatar?: string | null;
      id?: number;
      username?: string | null;
      usernameCanonical?: string | null;
      salt?: string;
      password?: string | null;
      plainPassword?: string | null;
      /** Format: date-time */
      lastLogin?: string | null;
      emailVerificationToken?: string | null;
      passwordResetToken?: string | null;
      /** Format: date-time */
      passwordRequestedAt?: string | null;
      /** Format: date-time */
      verifiedAt?: string | null;
      /** Format: date-time */
      expiresAt?: string | null;
      /** Format: date-time */
      credentialsExpireAt?: string | null;
      /**
       * @default ROLE_USER
       * @example ROLE_USER
       */
      roles?: string[];
      oauthAccounts?: components["schemas"]["UserOAuth"][];
      email: string | null;
      emailCanonical?: string | null;
      encoderName?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      image?: Partial<components["schemas"]["ImageInterface"]> | null;
      credentialsNonExpired?: boolean;
      accountNonExpired?: boolean;
      accountNonLocked?: boolean;
      verified?: boolean;
      oAuthAccounts?: components["schemas"]["UserOAuthInterface"][];
    };
    "Administrator-admin.admin_user.create": {
      firstName?: string | null;
      lastName?: string | null;
      localeCode: string;
      username: string | null;
      plainPassword: string | null;
      /** Format: email */
      email: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Administrator-admin.admin_user.read": {
      firstName?: string | null;
      lastName?: string | null;
      localeCode?: string;
      /** Format: iri-reference */
      avatar?: string | null;
      id?: number;
      username?: string | null;
      /** Format: date-time */
      lastLogin?: string | null;
      /** Format: date-time */
      verifiedAt?: string | null;
      email: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Administrator-admin.admin_user.update": {
      firstName?: string | null;
      lastName?: string | null;
      localeCode?: string;
      username?: string | null;
      plainPassword?: string | null;
      email: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Administrator.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      firstName?: string | null;
      lastName?: string | null;
      localeCode?: string;
      /** Format: iri-reference */
      avatar?: string | null;
      id?: number;
      username?: string | null;
      usernameCanonical?: string | null;
      salt?: string;
      password?: string | null;
      plainPassword?: string | null;
      /** Format: date-time */
      lastLogin?: string | null;
      emailVerificationToken?: string | null;
      passwordResetToken?: string | null;
      /** Format: date-time */
      passwordRequestedAt?: string | null;
      /** Format: date-time */
      verifiedAt?: string | null;
      /** Format: date-time */
      expiresAt?: string | null;
      /** Format: date-time */
      credentialsExpireAt?: string | null;
      /**
       * @default ROLE_USER
       * @example ROLE_USER
       */
      roles?: string[];
      oauthAccounts?: components["schemas"]["UserOAuth.jsonld"][];
      email: string | null;
      emailCanonical?: string | null;
      encoderName?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      image?: Partial<components["schemas"]["ImageInterface.jsonld"]> | null;
      credentialsNonExpired?: boolean;
      accountNonExpired?: boolean;
      accountNonLocked?: boolean;
      verified?: boolean;
      oAuthAccounts?: components["schemas"]["UserOAuthInterface.jsonld"][];
    };
    "Administrator.jsonld-admin.admin_user.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      firstName?: string | null;
      lastName?: string | null;
      localeCode: string;
      username: string | null;
      plainPassword: string | null;
      /** Format: email */
      email: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Administrator.jsonld-admin.admin_user.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      firstName?: string | null;
      lastName?: string | null;
      localeCode?: string;
      /** Format: iri-reference */
      avatar?: string | null;
      id?: number;
      username?: string | null;
      /** Format: date-time */
      lastLogin?: string | null;
      /** Format: date-time */
      verifiedAt?: string | null;
      email: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Administrator.jsonld-admin.admin_user.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      firstName?: string | null;
      lastName?: string | null;
      localeCode?: string;
      username?: string | null;
      plainPassword?: string | null;
      email: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    AttributeValueInterface: {
      /** Format: iri-reference */
      subject?: string;
      attribute?: components["schemas"]["ProductAttribute"];
      value?: unknown;
      code?: string | null;
      name?: string | null;
      type?: string | null;
      localeCode?: string | null;
      id?: number;
    };
    "AttributeValueInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      subject?: string;
      attribute?: components["schemas"]["ProductAttribute.jsonld"];
      value?: unknown;
      code?: string | null;
      name?: string | null;
      type?: string | null;
      localeCode?: string | null;
      id?: number;
    };
    AvatarImage: {
      id?: number;
      type?: string | null;
      /** Format: binary */
      file?: string | null;
      path: string;
      /** Format: iri-reference */
      owner: string;
    };
    "AvatarImage-admin.avatar_image.read": {
      id?: number;
      path: string;
      /** Format: iri-reference */
      owner: string;
    };
    "AvatarImage.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string | null;
      /** Format: binary */
      file?: string | null;
      path: string;
      /** Format: iri-reference */
      owner: string;
    };
    "AvatarImage.jsonld-admin.avatar_image.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      path: string;
      /** Format: iri-reference */
      owner: string;
    };
    "CatalogPromotion-admin.catalog_promotion.create": {
      channels?: string[];
      id?: number;
      name?: string;
      code?: string;
      /** Format: date-time */
      startDate?: string | null;
      /** Format: date-time */
      endDate?: string | null;
      priority?: number;
      exclusive?: boolean;
      scopes?: components["schemas"]["CatalogPromotionScope-admin.catalog_promotion.create"][];
      actions?: components["schemas"]["CatalogPromotionAction-admin.catalog_promotion.create"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["CatalogPromotionTranslation-admin.catalog_promotion.create"];
      };
    };
    "CatalogPromotion-admin.catalog_promotion.read": {
      channels?: string[];
      id?: number;
      name?: string;
      code?: string;
      /** Format: date-time */
      startDate?: string | null;
      /** Format: date-time */
      endDate?: string | null;
      priority?: number;
      exclusive?: boolean;
      /**
       * @default inactive
       * @example inactive
       */
      state?: string;
      scopes?: components["schemas"]["CatalogPromotionScope-admin.catalog_promotion.read"][];
      actions?: components["schemas"]["CatalogPromotionAction-admin.catalog_promotion.read"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["CatalogPromotionTranslation-admin.catalog_promotion.read"];
      };
    };
    "CatalogPromotion-admin.catalog_promotion.update": {
      channels?: string[];
      id?: number;
      name?: string;
      /** Format: date-time */
      startDate?: string | null;
      /** Format: date-time */
      endDate?: string | null;
      priority?: number;
      exclusive?: boolean;
      scopes?: components["schemas"]["CatalogPromotionScope-admin.catalog_promotion.update"][];
      actions?: components["schemas"]["CatalogPromotionAction-admin.catalog_promotion.update"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["CatalogPromotionTranslation-admin.catalog_promotion.update"];
      };
    };
    "CatalogPromotion-shop.catalog_promotion.read": {
      id?: number;
      label?: string | null;
    };
    "CatalogPromotion.jsonld-admin.catalog_promotion.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      channels?: string[];
      id?: number;
      name?: string;
      code?: string;
      /** Format: date-time */
      startDate?: string | null;
      /** Format: date-time */
      endDate?: string | null;
      priority?: number;
      exclusive?: boolean;
      scopes?: components["schemas"]["CatalogPromotionScope.jsonld-admin.catalog_promotion.create"][];
      actions?: components["schemas"]["CatalogPromotionAction.jsonld-admin.catalog_promotion.create"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["CatalogPromotionTranslation.jsonld-admin.catalog_promotion.create"];
      };
    };
    "CatalogPromotion.jsonld-admin.catalog_promotion.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      channels?: string[];
      id?: number;
      name?: string;
      code?: string;
      /** Format: date-time */
      startDate?: string | null;
      /** Format: date-time */
      endDate?: string | null;
      priority?: number;
      exclusive?: boolean;
      /**
       * @default inactive
       * @example inactive
       */
      state?: string;
      scopes?: components["schemas"]["CatalogPromotionScope.jsonld-admin.catalog_promotion.read"][];
      actions?: components["schemas"]["CatalogPromotionAction.jsonld-admin.catalog_promotion.read"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["CatalogPromotionTranslation.jsonld-admin.catalog_promotion.read"];
      };
    };
    "CatalogPromotion.jsonld-admin.catalog_promotion.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      channels?: string[];
      id?: number;
      name?: string;
      /** Format: date-time */
      startDate?: string | null;
      /** Format: date-time */
      endDate?: string | null;
      priority?: number;
      exclusive?: boolean;
      scopes?: components["schemas"]["CatalogPromotionScope.jsonld-admin.catalog_promotion.update"][];
      actions?: components["schemas"]["CatalogPromotionAction.jsonld-admin.catalog_promotion.update"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["CatalogPromotionTranslation.jsonld-admin.catalog_promotion.update"];
      };
    };
    "CatalogPromotion.jsonld-shop.catalog_promotion.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      label?: string | null;
    };
    "CatalogPromotionAction-admin.catalog_promotion.create": {
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionAction-admin.catalog_promotion.read": {
      id?: number;
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionAction-admin.catalog_promotion.update": {
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionAction.jsonld-admin.catalog_promotion.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionAction.jsonld-admin.catalog_promotion.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionAction.jsonld-admin.catalog_promotion.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionScope-admin.catalog_promotion.create": {
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionScope-admin.catalog_promotion.read": {
      id?: number;
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionScope-admin.catalog_promotion.update": {
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionScope.jsonld-admin.catalog_promotion.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionScope.jsonld-admin.catalog_promotion.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string;
      configuration?: string[];
    };
    "CatalogPromotionScope.jsonld-admin.catalog_promotion.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      type?: string;
      configuration?: string[];
    };
    CatalogPromotionTranslation: {
      id?: number;
      label?: string | null;
      description?: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "CatalogPromotionTranslation-admin.catalog_promotion.create": {
      label?: string | null;
      description?: string | null;
      locale: string;
    };
    "CatalogPromotionTranslation-admin.catalog_promotion.read": {
      id?: number;
      label?: string | null;
      description?: string | null;
    };
    "CatalogPromotionTranslation-admin.catalog_promotion.update": {
      label?: string | null;
      description?: string | null;
      locale: string;
    };
    "CatalogPromotionTranslation.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      label?: string | null;
      description?: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "CatalogPromotionTranslation.jsonld-admin.catalog_promotion.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      label?: string | null;
      description?: string | null;
      locale: string;
    };
    "CatalogPromotionTranslation.jsonld-admin.catalog_promotion.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      label?: string | null;
      description?: string | null;
    };
    "CatalogPromotionTranslation.jsonld-admin.catalog_promotion.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      label?: string | null;
      description?: string | null;
      locale: string;
    };
    Channel: {
      /** Format: iri-reference */
      baseCurrency?: string;
      /** Format: iri-reference */
      defaultLocale?: string;
      /** Format: iri-reference */
      defaultTaxZone?: string | null;
      taxCalculationStrategy?: string;
      currencies?: string[];
      locales?: string[];
      countries?: string[];
      themeName?: string | null;
      contactEmail?: string | null;
      contactPhoneNumber?: string | null;
      skippingShippingStepAllowed?: boolean;
      skippingPaymentStepAllowed?: boolean;
      /**
       * @default true
       * @example true
       */
      accountVerificationRequired?: boolean;
      /** Format: iri-reference */
      shopBillingData?: string | null;
      /** Format: iri-reference */
      menuTaxon?: string | null;
      id?: number;
      code: string;
      name?: string;
      description?: string | null;
      hostname?: string | null;
      color?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Channel-admin.channel.create": {
      /** Format: iri-reference */
      baseCurrency?: string;
      /** Format: iri-reference */
      defaultLocale?: string;
      /** Format: iri-reference */
      defaultTaxZone?: string | null;
      taxCalculationStrategy?: string;
      currencies?: string[];
      locales?: string[];
      countries?: string[];
      themeName?: string | null;
      contactEmail?: string | null;
      contactPhoneNumber?: string | null;
      skippingShippingStepAllowed?: boolean;
      skippingPaymentStepAllowed?: boolean;
      /**
       * @default true
       * @example true
       */
      accountVerificationRequired?: boolean;
      shopBillingData?: Partial<
        components["schemas"]["ShopBillingData-admin.channel.create"]
      > | null;
      /** Format: iri-reference */
      menuTaxon?: string | null;
      code: string;
      name?: string;
      description?: string | null;
      hostname?: string | null;
      color?: string | null;
    };
    "Channel-admin.channel.read": {
      /** Format: iri-reference */
      baseCurrency?: string;
      /** Format: iri-reference */
      defaultLocale?: string;
      /** Format: iri-reference */
      defaultTaxZone?: string | null;
      taxCalculationStrategy?: string;
      currencies?: string[];
      locales?: string[];
      countries?: string[];
      themeName?: string | null;
      contactEmail?: string | null;
      contactPhoneNumber?: string | null;
      skippingShippingStepAllowed?: boolean;
      skippingPaymentStepAllowed?: boolean;
      /**
       * @default true
       * @example true
       */
      accountVerificationRequired?: boolean;
      /** Format: iri-reference */
      shopBillingData?: string | null;
      /** Format: iri-reference */
      menuTaxon?: string | null;
      code: string;
      name?: string;
      description?: string | null;
      hostname?: string | null;
      color?: string | null;
    };
    "Channel-shop.channel.read": {
      baseCurrency?: components["schemas"]["Currency-shop.channel.read"];
      code: string;
      name?: string;
    };
    "Channel.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      baseCurrency?: string;
      /** Format: iri-reference */
      defaultLocale?: string;
      /** Format: iri-reference */
      defaultTaxZone?: string | null;
      taxCalculationStrategy?: string;
      currencies?: string[];
      locales?: string[];
      countries?: string[];
      themeName?: string | null;
      contactEmail?: string | null;
      contactPhoneNumber?: string | null;
      skippingShippingStepAllowed?: boolean;
      skippingPaymentStepAllowed?: boolean;
      /**
       * @default true
       * @example true
       */
      accountVerificationRequired?: boolean;
      /** Format: iri-reference */
      shopBillingData?: string | null;
      /** Format: iri-reference */
      menuTaxon?: string | null;
      id?: number;
      code: string;
      name?: string;
      description?: string | null;
      hostname?: string | null;
      color?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Channel.jsonld-admin.channel.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      baseCurrency?: string;
      /** Format: iri-reference */
      defaultLocale?: string;
      /** Format: iri-reference */
      defaultTaxZone?: string | null;
      taxCalculationStrategy?: string;
      currencies?: string[];
      locales?: string[];
      countries?: string[];
      themeName?: string | null;
      contactEmail?: string | null;
      contactPhoneNumber?: string | null;
      skippingShippingStepAllowed?: boolean;
      skippingPaymentStepAllowed?: boolean;
      /**
       * @default true
       * @example true
       */
      accountVerificationRequired?: boolean;
      shopBillingData?: Partial<
        components["schemas"]["ShopBillingData.jsonld-admin.channel.create"]
      > | null;
      /** Format: iri-reference */
      menuTaxon?: string | null;
      code: string;
      name?: string;
      description?: string | null;
      hostname?: string | null;
      color?: string | null;
    };
    "Channel.jsonld-admin.channel.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      /** Format: iri-reference */
      baseCurrency?: string;
      /** Format: iri-reference */
      defaultLocale?: string;
      /** Format: iri-reference */
      defaultTaxZone?: string | null;
      taxCalculationStrategy?: string;
      currencies?: string[];
      locales?: string[];
      countries?: string[];
      themeName?: string | null;
      contactEmail?: string | null;
      contactPhoneNumber?: string | null;
      skippingShippingStepAllowed?: boolean;
      skippingPaymentStepAllowed?: boolean;
      /**
       * @default true
       * @example true
       */
      accountVerificationRequired?: boolean;
      /** Format: iri-reference */
      shopBillingData?: string | null;
      /** Format: iri-reference */
      menuTaxon?: string | null;
      code: string;
      name?: string;
      description?: string | null;
      hostname?: string | null;
      color?: string | null;
    };
    "Channel.jsonld-shop.channel.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      baseCurrency?: components["schemas"]["Currency.jsonld-shop.channel.read"];
      code: string;
      name?: string;
    };
    ChannelInterface: {
      name?: string;
      description?: string | null;
      hostname?: string | null;
      color?: string | null;
      code?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      enabled?: boolean;
      id?: number;
    };
    "ChannelInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name?: string;
      description?: string | null;
      hostname?: string | null;
      color?: string | null;
      code?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      enabled?: boolean;
      id?: number;
    };
    "ChannelPricing-admin.product_variant.create": {
      channelCode?: string;
      price?: number | null;
      originalPrice?: number | null;
      minimumPrice?: number | null;
    };
    "ChannelPricing-admin.product_variant.read": {
      id?: number;
      channelCode?: string;
      price?: number | null;
      originalPrice?: number | null;
      minimumPrice?: number | null;
    };
    "ChannelPricing-admin.product_variant.update": {
      price?: number | null;
      originalPrice?: number | null;
      minimumPrice?: number | null;
    };
    "ChannelPricing.jsonld-admin.product_variant.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      channelCode?: string;
      price?: number | null;
      originalPrice?: number | null;
      minimumPrice?: number | null;
    };
    "ChannelPricing.jsonld-admin.product_variant.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      channelCode?: string;
      price?: number | null;
      originalPrice?: number | null;
      minimumPrice?: number | null;
    };
    "ChannelPricing.jsonld-admin.product_variant.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      price?: number | null;
      originalPrice?: number | null;
      minimumPrice?: number | null;
    };
    Collection: {
      empty?: boolean;
      keys?: unknown;
      values?: unknown;
      iterator?: unknown;
    };
    "Collection.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      empty?: boolean;
      keys?: unknown;
      values?: unknown;
      iterator?: unknown;
    };
    Country: {
      id?: number;
      code?: string;
      provinces?: string[];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      name?: string | null;
    };
    "Country-admin.country.create": {
      code: string;
      provinces?: components["schemas"]["Province-admin.country.create"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Country-admin.country.read": {
      id?: number;
      code: string;
      provinces?: string[];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      name?: string | null;
    };
    "Country-admin.country.update": {
      provinces?: components["schemas"]["Province-admin.country.update"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Country-shop.country.read": {
      code: string;
      provinces?: components["schemas"]["Province-shop.country.read"][];
      name?: string | null;
    };
    "Country.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code?: string;
      provinces?: string[];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      name?: string | null;
    };
    "Country.jsonld-admin.country.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      provinces?: components["schemas"]["Province.jsonld-admin.country.create"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Country.jsonld-admin.country.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      provinces?: string[];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      name?: string | null;
    };
    "Country.jsonld-admin.country.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      provinces?: components["schemas"]["Province.jsonld-admin.country.update"][];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
    };
    "Country.jsonld-shop.country.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      code: string;
      provinces?: components["schemas"]["Province.jsonld-shop.country.read"][];
      name?: string | null;
    };
    Currency: {
      id?: number;
      code: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      name?: string | null;
    };
    "Currency-admin.currency.read": {
      id?: number;
      code: string;
      name?: string | null;
    };
    "Currency-shop.channel.read": {
      code: string;
    };
    "Currency-shop.currency.read": {
      id?: number;
      code: string;
      name?: string | null;
    };
    "Currency.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      name?: string | null;
    };
    "Currency.jsonld-admin.currency.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      name?: string | null;
    };
    "Currency.jsonld-shop.channel.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
    };
    "Currency.jsonld-shop.currency.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      name?: string | null;
    };
    "Customer-admin.customer.read": {
      /** Format: iri-reference */
      defaultAddress?: string | null;
      id?: number;
      email?: string;
      firstName?: string | null;
      lastName?: string | null;
      /**
       * @default u
       * @example u
       */
      gender?: string;
      fullName?: string;
    };
    "Customer-shop.customer.read": {
      /** Format: iri-reference */
      defaultAddress?: string | null;
      user?: Partial<
        components["schemas"]["ShopUser-shop.customer.read"]
      > | null;
      email?: string;
      firstName?: string | null;
      lastName?: string | null;
      /**
       * @default u
       * @example u
       */
      gender?: string;
      subscribedToNewsletter?: boolean;
      fullName?: string;
    };
    "Customer-shop.customer.update": {
      /** Format: iri-reference */
      defaultAddress?: string | null;
      email?: string;
      firstName?: string | null;
      lastName?: string | null;
      /**
       * @default u
       * @example u
       */
      gender?: string;
      subscribedToNewsletter?: boolean;
    };
    "Customer.ChangeShopUserPassword-shop.customer.password.update": {
      newPassword?: string | null;
      confirmNewPassword?: string | null;
      currentPassword?: string | null;
    };
    "Customer.ChangeShopUserPassword.jsonld-shop.customer.password.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      newPassword?: string | null;
      confirmNewPassword?: string | null;
      currentPassword?: string | null;
    };
    "Customer.RegisterShopUser-shop.customer.create": {
      firstName?: string;
      lastName?: string;
      email?: string;
      password?: string;
      subscribedToNewsletter?: boolean;
    };
    "Customer.RegisterShopUser.jsonld-shop.customer.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      firstName?: string;
      lastName?: string;
      email?: string;
      password?: string;
      subscribedToNewsletter?: boolean;
    };
    "Customer.jsonld-admin.customer.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      defaultAddress?: string | null;
      id?: number;
      email?: string;
      firstName?: string | null;
      lastName?: string | null;
      /**
       * @default u
       * @example u
       */
      gender?: string;
      fullName?: string;
    };
    "Customer.jsonld-shop.customer.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      defaultAddress?: string | null;
      user?: Partial<
        components["schemas"]["ShopUser.jsonld-shop.customer.read"]
      > | null;
      email?: string;
      firstName?: string | null;
      lastName?: string | null;
      /**
       * @default u
       * @example u
       */
      gender?: string;
      subscribedToNewsletter?: boolean;
      fullName?: string;
    };
    "Customer.jsonld-shop.customer.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      defaultAddress?: string | null;
      email?: string;
      firstName?: string | null;
      lastName?: string | null;
      /**
       * @default u
       * @example u
       */
      gender?: string;
      subscribedToNewsletter?: boolean;
    };
    CustomerGroup: {
      id?: number;
      code?: string;
      name?: string;
    };
    "CustomerGroup-admin.customer_group.create": {
      code: string;
      name?: string;
    };
    "CustomerGroup-admin.customer_group.read": {
      id?: number;
      code: string;
      name?: string;
    };
    "CustomerGroup-admin.customer_group.update": {
      name?: string;
    };
    "CustomerGroup.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code?: string;
      name?: string;
    };
    "CustomerGroup.jsonld-admin.customer_group.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      name?: string;
    };
    "CustomerGroup.jsonld-admin.customer_group.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      name?: string;
    };
    "CustomerGroup.jsonld-admin.customer_group.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name?: string;
    };
    ExchangeRate: {
      id?: number;
      ratio: string;
      /** Format: iri-reference */
      sourceCurrency?: string;
      /** Format: iri-reference */
      targetCurrency?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ExchangeRate-admin.exchange_rate.create": {
      ratio: string;
      /** Format: iri-reference */
      sourceCurrency: string;
      /** Format: iri-reference */
      targetCurrency: string;
    };
    "ExchangeRate-admin.exchange_rate.read": {
      id?: number;
      ratio: string;
      /** Format: iri-reference */
      sourceCurrency: string;
      /** Format: iri-reference */
      targetCurrency: string;
    };
    "ExchangeRate-admin.exchange_rate.update": {
      ratio: string;
    };
    "ExchangeRate.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      ratio: string;
      /** Format: iri-reference */
      sourceCurrency?: string;
      /** Format: iri-reference */
      targetCurrency?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ExchangeRate.jsonld-admin.exchange_rate.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      ratio: string;
      /** Format: iri-reference */
      sourceCurrency: string;
      /** Format: iri-reference */
      targetCurrency: string;
    };
    "ExchangeRate.jsonld-admin.exchange_rate.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      ratio: string;
      /** Format: iri-reference */
      sourceCurrency: string;
      /** Format: iri-reference */
      targetCurrency: string;
    };
    "ExchangeRate.jsonld-admin.exchange_rate.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      ratio: string;
    };
    ImageInterface: {
      type?: string | null;
      /** Format: binary */
      file?: string | null;
      path?: string | null;
      owner?: unknown;
      id?: unknown;
    };
    "ImageInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      type?: string | null;
      /** Format: binary */
      file?: string | null;
      path?: string | null;
      owner?: unknown;
      id?: unknown;
    };
    Locale: {
      id?: number;
      code: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      name?: string | null;
    };
    "Locale-admin.locale.create": {
      code: string;
    };
    "Locale-admin.locale.read": {
      id?: number;
      code: string;
      name?: string | null;
    };
    "Locale-shop.locale.read": {
      code: string;
      name?: string | null;
    };
    "Locale.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      name?: string | null;
    };
    "Locale.jsonld-admin.locale.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
    };
    "Locale.jsonld-admin.locale.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      name?: string | null;
    };
    "Locale.jsonld-shop.locale.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      code: string;
      name?: string | null;
    };
    "Order-admin.order.read": {
      /** Format: iri-reference */
      customer?: string | null;
      /** Format: iri-reference */
      channel?: string | null;
      shippingAddress?: Partial<
        components["schemas"]["Address-admin.order.read"]
      > | null;
      billingAddress?: Partial<
        components["schemas"]["Address-admin.order.read"]
      > | null;
      payments?: components["schemas"]["Payment-admin.order.read"][];
      shipments?: components["schemas"]["Shipment-admin.order.read"][];
      currencyCode?: string;
      localeCode?: string;
      /**
       * @default cart
       * @example cart
       */
      checkoutState?: string;
      /**
       * @default cart
       * @example cart
       */
      paymentState?: string;
      /**
       * @default cart
       * @example cart
       */
      shippingState?: string;
      tokenValue?: string | null;
      id?: number;
      number?: string | null;
      notes?: string | null;
      items?: components["schemas"]["OrderItem-admin.order.read"][];
      itemsTotal?: number;
      total?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      taxTotal?: number;
      shippingTotal?: number;
      orderPromotionTotal?: number;
    };
    "Order-shop.cart.read": {
      shippingAddress?: Partial<
        components["schemas"]["Address-shop.cart.read"]
      > | null;
      billingAddress?: Partial<
        components["schemas"]["Address-shop.cart.read"]
      > | null;
      payments?: components["schemas"]["Payment-shop.cart.read"][];
      shipments?: components["schemas"]["Shipment-shop.cart.read"][];
      currencyCode?: string;
      localeCode?: string;
      /**
       * @default cart
       * @example cart
       */
      checkoutState?: string;
      /**
       * @default cart
       * @example cart
       */
      paymentState?: string;
      /**
       * @default cart
       * @example cart
       */
      shippingState?: string;
      tokenValue?: string | null;
      id?: number;
      number?: string | null;
      items?: components["schemas"]["OrderItem-shop.cart.read"][];
      itemsTotal?: number;
      total?: number;
      taxTotal?: number;
      shippingTotal?: number;
      orderPromotionTotal?: number;
    };
    "Order-shop.order.account.read": {
      shippingAddress?: Partial<
        components["schemas"]["Address-shop.order.account.read"]
      > | null;
      billingAddress?: Partial<
        components["schemas"]["Address-shop.order.account.read"]
      > | null;
      payments?: components["schemas"]["Payment-shop.order.account.read"][];
      shipments?: components["schemas"]["Shipment-shop.order.account.read"][];
      localeCode?: string;
      /**
       * @default cart
       * @example cart
       */
      checkoutState?: string;
      tokenValue?: string | null;
      id?: number;
      number?: string | null;
      items?: components["schemas"]["OrderItem-shop.order.account.read"][];
      itemsTotal?: number;
      total?: number;
      taxTotal?: number;
      shippingTotal?: number;
      orderPromotionTotal?: number;
    };
    "Order-shop.order.read": {
      tokenValue?: string | null;
      id?: number;
      number?: string | null;
      itemsTotal?: number;
    };
    "Order.AddItemToCart-shop.cart.add_item": {
      productVariant?: string;
      quantity?: number;
    };
    "Order.AddItemToCart.jsonld-shop.cart.add_item": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      productVariant?: string;
      quantity?: number;
    };
    "Order.ChangeItemQuantityInCart-shop.cart.change_quantity": {
      quantity?: number;
    };
    "Order.ChangePaymentMethod-shop.order.account.change_payment_method": {
      paymentMethod?: string;
    };
    "Order.ChoosePaymentMethod-shop.cart.select_payment_method": {
      paymentMethod?: string | null;
    };
    "Order.ChooseShippingMethod-shop.cart.select_shipping_method": {
      shippingMethod?: string;
    };
    "Order.CompleteOrder-shop.cart.complete": {
      notes?: string | null;
    };
    "Order.PickupCart-shop.order.create": {
      localeCode?: string | null;
    };
    "Order.PickupCart.jsonld-shop.order.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      localeCode?: string | null;
    };
    "Order.UpdateCart-shop.cart.update": {
      email?: string | null;
      billingAddress?: Partial<
        components["schemas"]["AddressInterface-shop.cart.update"]
      > | null;
      shippingAddress?: Partial<
        components["schemas"]["AddressInterface-shop.cart.update"]
      > | null;
      couponCode?: string | null;
    };
    "Order.UpdateCart.jsonld-shop.cart.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      email?: string | null;
      billingAddress?: Partial<
        components["schemas"]["AddressInterface.jsonld-shop.cart.update"]
      > | null;
      shippingAddress?: Partial<
        components["schemas"]["AddressInterface.jsonld-shop.cart.update"]
      > | null;
      couponCode?: string | null;
    };
    "Order.jsonld-admin.order.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      customer?: string | null;
      /** Format: iri-reference */
      channel?: string | null;
      shippingAddress?: Partial<
        components["schemas"]["Address.jsonld-admin.order.read"]
      > | null;
      billingAddress?: Partial<
        components["schemas"]["Address.jsonld-admin.order.read"]
      > | null;
      payments?: components["schemas"]["Payment.jsonld-admin.order.read"][];
      shipments?: components["schemas"]["Shipment.jsonld-admin.order.read"][];
      currencyCode?: string;
      localeCode?: string;
      /**
       * @default cart
       * @example cart
       */
      checkoutState?: string;
      /**
       * @default cart
       * @example cart
       */
      paymentState?: string;
      /**
       * @default cart
       * @example cart
       */
      shippingState?: string;
      tokenValue?: string | null;
      id?: number;
      number?: string | null;
      notes?: string | null;
      items?: components["schemas"]["OrderItem.jsonld-admin.order.read"][];
      itemsTotal?: number;
      total?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      taxTotal?: number;
      shippingTotal?: number;
      orderPromotionTotal?: number;
    };
    "Order.jsonld-shop.cart.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      shippingAddress?: Partial<
        components["schemas"]["Address.jsonld-shop.cart.read"]
      > | null;
      billingAddress?: Partial<
        components["schemas"]["Address.jsonld-shop.cart.read"]
      > | null;
      payments?: components["schemas"]["Payment.jsonld-shop.cart.read"][];
      shipments?: components["schemas"]["Shipment.jsonld-shop.cart.read"][];
      currencyCode?: string;
      localeCode?: string;
      /**
       * @default cart
       * @example cart
       */
      checkoutState?: string;
      /**
       * @default cart
       * @example cart
       */
      paymentState?: string;
      /**
       * @default cart
       * @example cart
       */
      shippingState?: string;
      tokenValue?: string | null;
      id?: number;
      number?: string | null;
      items?: components["schemas"]["OrderItem.jsonld-shop.cart.read"][];
      itemsTotal?: number;
      total?: number;
      taxTotal?: number;
      shippingTotal?: number;
      orderPromotionTotal?: number;
    };
    "Order.jsonld-shop.order.account.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      shippingAddress?: Partial<
        components["schemas"]["Address.jsonld-shop.order.account.read"]
      > | null;
      billingAddress?: Partial<
        components["schemas"]["Address.jsonld-shop.order.account.read"]
      > | null;
      payments?: components["schemas"]["Payment.jsonld-shop.order.account.read"][];
      shipments?: components["schemas"]["Shipment.jsonld-shop.order.account.read"][];
      localeCode?: string;
      /**
       * @default cart
       * @example cart
       */
      checkoutState?: string;
      tokenValue?: string | null;
      id?: number;
      number?: string | null;
      items?: components["schemas"]["OrderItem.jsonld-shop.order.account.read"][];
      itemsTotal?: number;
      total?: number;
      taxTotal?: number;
      shippingTotal?: number;
      orderPromotionTotal?: number;
    };
    "Order.jsonld-shop.order.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      tokenValue?: string | null;
      id?: number;
      number?: string | null;
      itemsTotal?: number;
    };
    "OrderItem-admin.order.read": {
      /** Format: iri-reference */
      variant: string;
      productName?: string | null;
      id?: number;
      quantity?: number;
      unitPrice?: number;
      originalUnitPrice?: number | null;
      total?: number;
      subtotal?: number;
    };
    "OrderItem-admin.order_item.read": {
      /** Format: iri-reference */
      variant: string;
      productName?: string | null;
      id?: number;
      /** Format: iri-reference */
      order?: string;
      quantity?: number;
      unitPrice?: number;
      originalUnitPrice?: number | null;
      total?: number;
      units?: string[];
      adjustments?: string[];
      adjustmentsTotal?: number;
      product?: Partial<
        components["schemas"]["ProductInterface-admin.order_item.read"]
      > | null;
      subtotal?: number;
      adjustmentsRecursively?: (string | null)[];
      adjustmentsTotalRecursively?: number;
    };
    "OrderItem-shop.cart.read": {
      /** Format: iri-reference */
      variant: string;
      productName?: string | null;
      id?: number;
      quantity?: number;
      unitPrice?: number;
      originalUnitPrice?: number | null;
      total?: number;
      discountedUnitPrice?: number;
      subtotal?: number;
    };
    "OrderItem-shop.order.account.read": {
      /** Format: iri-reference */
      variant: string;
      productName?: string | null;
      id?: number;
      quantity?: number;
    };
    "OrderItem.jsonld-admin.order.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      variant: string;
      productName?: string | null;
      id?: number;
      quantity?: number;
      unitPrice?: number;
      originalUnitPrice?: number | null;
      total?: number;
      subtotal?: number;
    };
    "OrderItem.jsonld-admin.order_item.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      variant: string;
      productName?: string | null;
      id?: number;
      /** Format: iri-reference */
      order?: string;
      quantity?: number;
      unitPrice?: number;
      originalUnitPrice?: number | null;
      total?: number;
      units?: string[];
      adjustments?: string[];
      adjustmentsTotal?: number;
      product?: Partial<
        components["schemas"]["ProductInterface.jsonld-admin.order_item.read"]
      > | null;
      subtotal?: number;
      adjustmentsRecursively?: (string | null)[];
      adjustmentsTotalRecursively?: number;
    };
    "OrderItem.jsonld-shop.cart.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      variant: string;
      productName?: string | null;
      id?: number;
      quantity?: number;
      unitPrice?: number;
      originalUnitPrice?: number | null;
      total?: number;
      discountedUnitPrice?: number;
      subtotal?: number;
    };
    "OrderItem.jsonld-shop.order.account.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      variant: string;
      productName?: string | null;
      id?: number;
      quantity?: number;
    };
    "OrderItemUnit-admin.order_item_unit.read": {
      id?: number;
      shippable?: Partial<
        components["schemas"]["ShippableInterface-admin.order_item_unit.read"]
      > | null;
    };
    "OrderItemUnit-shop.order_item_unit.read": {
      id?: number;
      shippable?: Partial<
        components["schemas"]["ShippableInterface-shop.order_item_unit.read"]
      > | null;
    };
    "OrderItemUnit.jsonld-admin.order_item_unit.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      shippable?: Partial<
        components["schemas"]["ShippableInterface.jsonld-admin.order_item_unit.read"]
      > | null;
    };
    "OrderItemUnit.jsonld-shop.order_item_unit.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      shippable?: Partial<
        components["schemas"]["ShippableInterface.jsonld-shop.order_item_unit.read"]
      > | null;
    };
    Payment: {
      /** Format: iri-reference */
      order?: string;
      id?: number;
      /** Format: iri-reference */
      method?: string | null;
      currencyCode?: string;
      amount?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      details?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "Payment-admin.order.read": {
      id?: number;
      /** Format: iri-reference */
      method?: string | null;
    };
    "Payment-admin.payment.read": {
      /** Format: iri-reference */
      order?: string;
      id?: number;
      method?: Partial<
        components["schemas"]["PaymentMethod-admin.payment.read"]
      > | null;
      currencyCode?: string;
      amount?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      details?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "Payment-shop.cart.read": {
      id?: number;
      /** Format: iri-reference */
      method?: string | null;
    };
    "Payment-shop.order.account.read": {
      method?: Partial<
        components["schemas"]["PaymentMethod-shop.order.account.read"]
      > | null;
    };
    "Payment-shop.payment.read": {
      /** Format: iri-reference */
      order?: string;
      id?: number;
      method?: Partial<
        components["schemas"]["PaymentMethod-shop.payment.read"]
      > | null;
      currencyCode?: string;
      amount?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      details?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "Payment.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      order?: string;
      id?: number;
      /** Format: iri-reference */
      method?: string | null;
      currencyCode?: string;
      amount?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      details?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "Payment.jsonld-admin.order.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: iri-reference */
      method?: string | null;
    };
    "Payment.jsonld-admin.payment.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      /** Format: iri-reference */
      order?: string;
      id?: number;
      method?: Partial<
        components["schemas"]["PaymentMethod.jsonld-admin.payment.read"]
      > | null;
      currencyCode?: string;
      amount?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      details?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "Payment.jsonld-shop.cart.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: iri-reference */
      method?: string | null;
    };
    "Payment.jsonld-shop.order.account.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      method?: Partial<
        components["schemas"]["PaymentMethod.jsonld-shop.order.account.read"]
      > | null;
    };
    "Payment.jsonld-shop.payment.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      order?: string;
      id?: number;
      method?: Partial<
        components["schemas"]["PaymentMethod.jsonld-shop.payment.read"]
      > | null;
      currencyCode?: string;
      amount?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      details?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "PaymentMethod-admin.payment.read": {
      name?: string | null;
    };
    "PaymentMethod-admin.payment_method.read": {
      id?: number;
      code?: string;
      name?: string | null;
    };
    "PaymentMethod-shop.order.account.read": {
      name?: string | null;
    };
    "PaymentMethod-shop.payment.read": {
      name?: string | null;
    };
    "PaymentMethod-shop.payment_method.read": {
      id?: number;
      code?: string;
      position?: number;
      name?: string | null;
      description?: string | null;
      instructions?: string | null;
    };
    "PaymentMethod.jsonld-admin.payment.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name?: string | null;
    };
    "PaymentMethod.jsonld-admin.payment_method.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code?: string;
      name?: string | null;
    };
    "PaymentMethod.jsonld-shop.order.account.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name?: string | null;
    };
    "PaymentMethod.jsonld-shop.payment.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name?: string | null;
    };
    "PaymentMethod.jsonld-shop.payment_method.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code?: string;
      position?: number;
      name?: string | null;
      description?: string | null;
      instructions?: string | null;
    };
    Product: {
      /**
       * @default choice
       * @example choice
       */
      variantSelectionMethod?: string;
      productTaxons?: string[];
      channels?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      reviews?: string[];
      averageRating?: number;
      images?: string[];
      id?: number;
      code?: string;
      attributes?: components["schemas"]["ProductAttributeValue"][];
      variants?: string[];
      options?: string[];
      associations?: components["schemas"]["ProductAssociation"][];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: { [key: string]: string };
      variantSelectionMethodChoice?: boolean;
      variantSelectionMethodLabel?: string;
      taxons?: components["schemas"]["Collection"];
      shortDescription?: string | null;
      acceptedReviews?: components["schemas"]["Collection"];
      variantSelectionMethodLabels?: unknown;
      translation?: components["schemas"]["TranslationInterface"][];
      name?: string | null;
      description?: string | null;
      slug?: string | null;
      metaKeywords?: string | null;
      metaDescription?: string | null;
      enabledVariants?: components["schemas"]["Collection"];
      simple?: boolean;
      configurable?: boolean;
    };
    "Product-admin.product.create": {
      productTaxons?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      images?: string[];
      code: string;
      options?: string[];
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductTranslation-admin.product.create"];
      };
    };
    "Product-admin.product.read": {
      productTaxons?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      reviews?: string[];
      images?: components["schemas"]["ProductImage-admin.product.read"][];
      id?: number;
      code: string;
      variants?: string[];
      options?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductTranslation-admin.product.read"];
      };
    };
    "Product-admin.product.update": {
      productTaxons?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      images?: string[];
      options?: string[];
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductTranslation-admin.product.update"];
      };
    };
    "Product-shop.product.read": {
      productTaxons?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      reviews?: string[];
      averageRating?: number;
      images?: components["schemas"]["ProductImage-shop.product.read"][];
      id?: number;
      code: string;
      variants?: string[];
      options?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      shortDescription?: string | null;
      name?: string | null;
      description?: string | null;
      slug?: string | null;
    };
    "Product.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /**
       * @default choice
       * @example choice
       */
      variantSelectionMethod?: string;
      productTaxons?: string[];
      channels?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      reviews?: string[];
      averageRating?: number;
      images?: string[];
      id?: number;
      code?: string;
      attributes?: components["schemas"]["ProductAttributeValue.jsonld"][];
      variants?: string[];
      options?: string[];
      associations?: components["schemas"]["ProductAssociation.jsonld"][];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: { [key: string]: string };
      variantSelectionMethodChoice?: boolean;
      variantSelectionMethodLabel?: string;
      taxons?: components["schemas"]["Collection.jsonld"];
      shortDescription?: string | null;
      acceptedReviews?: components["schemas"]["Collection.jsonld"];
      variantSelectionMethodLabels?: unknown;
      translation?: components["schemas"]["TranslationInterface.jsonld"][];
      name?: string | null;
      description?: string | null;
      slug?: string | null;
      metaKeywords?: string | null;
      metaDescription?: string | null;
      enabledVariants?: components["schemas"]["Collection.jsonld"];
      simple?: boolean;
      configurable?: boolean;
    };
    "Product.jsonld-admin.product.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      productTaxons?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      images?: string[];
      code: string;
      options?: string[];
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductTranslation.jsonld-admin.product.create"];
      };
    };
    "Product.jsonld-admin.product.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      productTaxons?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      reviews?: string[];
      images?: components["schemas"]["ProductImage.jsonld-admin.product.read"][];
      id?: number;
      code: string;
      variants?: string[];
      options?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductTranslation.jsonld-admin.product.read"];
      };
    };
    "Product.jsonld-admin.product.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      productTaxons?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      images?: string[];
      options?: string[];
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductTranslation.jsonld-admin.product.update"];
      };
    };
    "Product.jsonld-shop.product.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      productTaxons?: string[];
      /** Format: iri-reference */
      mainTaxon?: string | null;
      reviews?: string[];
      averageRating?: number;
      images?: components["schemas"]["ProductImage.jsonld-shop.product.read"][];
      id?: number;
      code: string;
      variants?: string[];
      options?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      shortDescription?: string | null;
      name?: string | null;
      description?: string | null;
      slug?: string | null;
    };
    ProductAssociation: {
      id?: number;
      /** Format: iri-reference */
      type?: string;
      /** Format: iri-reference */
      owner?: string;
      associatedProducts?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      associatedProduct?: components["schemas"]["ProductInterface"][];
    };
    "ProductAssociation.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: iri-reference */
      type?: string;
      /** Format: iri-reference */
      owner?: string;
      associatedProducts?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      associatedProduct?: components["schemas"]["ProductInterface.jsonld"][];
    };
    "ProductAssociationType-admin.product_association_type.create": {
      code: string;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductAssociationTypeTranslation-admin.product_association_type.create"];
      };
    };
    "ProductAssociationType-admin.product_association_type.read": {
      id?: number;
      code: string;
      name?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductAssociationTypeTranslation-admin.product_association_type.read"];
      };
    };
    "ProductAssociationType-admin.product_association_type.update": {
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductAssociationTypeTranslation-admin.product_association_type.update"];
      };
    };
    "ProductAssociationType.jsonld-admin.product_association_type.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductAssociationTypeTranslation.jsonld-admin.product_association_type.create"];
      };
    };
    "ProductAssociationType.jsonld-admin.product_association_type.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      name?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductAssociationTypeTranslation.jsonld-admin.product_association_type.read"];
      };
    };
    "ProductAssociationType.jsonld-admin.product_association_type.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductAssociationTypeTranslation.jsonld-admin.product_association_type.update"];
      };
    };
    ProductAssociationTypeTranslation: {
      id?: number;
      name: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductAssociationTypeTranslation-admin.product_association_type.create": {
      name: string | null;
      locale: string;
    };
    "ProductAssociationTypeTranslation-admin.product_association_type.read": {
      id?: number;
      name: string | null;
    };
    "ProductAssociationTypeTranslation-admin.product_association_type.update": {
      name: string | null;
      locale: string;
    };
    "ProductAssociationTypeTranslation.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductAssociationTypeTranslation.jsonld-admin.product_association_type.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string | null;
      locale: string;
    };
    "ProductAssociationTypeTranslation.jsonld-admin.product_association_type.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string | null;
    };
    "ProductAssociationTypeTranslation.jsonld-admin.product_association_type.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string | null;
      locale: string;
    };
    ProductAttribute: {
      id?: number;
      code?: string;
      /**
       * @default text
       * @example text
       */
      type?: string;
      configuration?: string[];
      storageType?: string;
      position?: number;
      /**
       * @default true
       * @example true
       */
      translatable?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      translations?: {
        [key: string]: components["schemas"]["ProductAttributeTranslation"];
      };
      currentLocale?: string;
      fallbackLocale?: string;
      name?: string | null;
      translation?: components["schemas"]["TranslationInterface"][];
    };
    "ProductAttribute.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code?: string;
      /**
       * @default text
       * @example text
       */
      type?: string;
      configuration?: string[];
      storageType?: string;
      position?: number;
      /**
       * @default true
       * @example true
       */
      translatable?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductAttributeTranslation.jsonld"];
      };
      currentLocale?: string;
      fallbackLocale?: string;
      name?: string | null;
      translation?: components["schemas"]["TranslationInterface.jsonld"][];
    };
    ProductAttributeTranslation: {
      id?: number;
      name?: string;
      locale?: string;
      translatable?: components["schemas"]["ProductAttribute"];
    };
    "ProductAttributeTranslation.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name?: string;
      locale?: string;
      translatable?: components["schemas"]["ProductAttribute.jsonld"];
    };
    ProductAttributeValue: {
      id?: number;
      /** Format: iri-reference */
      subject?: string;
      attribute?: components["schemas"]["ProductAttribute"];
      localeCode?: string | null;
      product?: Partial<components["schemas"]["ProductInterface"]> | null;
      text?: string | null;
      boolean?: boolean | null;
      integer?: number | null;
      float?: number | null;
      /** Format: date-time */
      datetime?: string | null;
      /** Format: date-time */
      date?: string | null;
      json?: string[] | null;
      value?: unknown;
      code?: string | null;
      name?: string | null;
      type?: string | null;
    };
    "ProductAttributeValue.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: iri-reference */
      subject?: string;
      attribute?: components["schemas"]["ProductAttribute.jsonld"];
      localeCode?: string | null;
      product?: Partial<
        components["schemas"]["ProductInterface.jsonld"]
      > | null;
      text?: string | null;
      boolean?: boolean | null;
      integer?: number | null;
      float?: number | null;
      /** Format: date-time */
      datetime?: string | null;
      /** Format: date-time */
      date?: string | null;
      json?: string[] | null;
      value?: unknown;
      code?: string | null;
      name?: string | null;
      type?: string | null;
    };
    "ProductImage-admin.product.read": {
      id?: number;
      type?: string | null;
      path: string;
    };
    "ProductImage-admin.product_image.read": {
      id?: number;
      type?: string | null;
      path: string;
    };
    "ProductImage-shop.product.read": {
      id?: number;
      type?: string | null;
      path: string;
    };
    "ProductImage-shop.product_image.read": {
      id?: number;
      type?: string | null;
      path: string;
    };
    "ProductImage.jsonld-admin.product.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string | null;
      path: string;
    };
    "ProductImage.jsonld-admin.product_image.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      type?: string | null;
      path: string;
    };
    "ProductImage.jsonld-shop.product.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string | null;
      path: string;
    };
    "ProductImage.jsonld-shop.product_image.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string | null;
      path: string;
    };
    ProductInterface: {
      name?: string | null;
      description?: string | null;
      metaKeywords?: string | null;
      metaDescription?: string | null;
      variants?: string[];
      variant?: components["schemas"]["ProductVariantInterface"][];
      enabledVariants?: components["schemas"]["Collection"];
      options?: string[];
      option?: components["schemas"]["ProductOptionInterface"][];
      associations?: components["schemas"]["ProductAssociation"][];
      simple?: boolean;
      configurable?: boolean;
      translation?: components["schemas"]["TranslationInterface"][];
      attributes?: components["schemas"]["ProductAttributeValue"][];
      attribute?: components["schemas"]["AttributeValueInterface"][];
      code?: string;
      id?: number;
      slug?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      enabled?: boolean;
      translations?: { [key: string]: string };
      currentLocale?: string;
      fallbackLocale?: string;
    };
    "ProductInterface-admin.order_item.read": { [key: string]: unknown };
    "ProductInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name?: string | null;
      description?: string | null;
      metaKeywords?: string | null;
      metaDescription?: string | null;
      variants?: string[];
      variant?: components["schemas"]["ProductVariantInterface.jsonld"][];
      enabledVariants?: components["schemas"]["Collection.jsonld"];
      options?: string[];
      option?: components["schemas"]["ProductOptionInterface.jsonld"][];
      associations?: components["schemas"]["ProductAssociation.jsonld"][];
      simple?: boolean;
      configurable?: boolean;
      translation?: components["schemas"]["TranslationInterface.jsonld"][];
      attributes?: components["schemas"]["ProductAttributeValue.jsonld"][];
      attribute?: components["schemas"]["AttributeValueInterface.jsonld"][];
      code?: string;
      id?: number;
      slug?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      enabled?: boolean;
      translations?: { [key: string]: string };
      currentLocale?: string;
      fallbackLocale?: string;
    };
    "ProductInterface.jsonld-admin.order_item.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
    };
    "ProductOption-admin.product_option.create": {
      code: string;
      values?: components["schemas"]["ProductOptionValue-admin.product_option.create"][];
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductOptionTranslation-admin.product_option.create"];
      };
    };
    "ProductOption-admin.product_option.read": {
      id?: number;
      code: string;
      values?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductOptionTranslation-admin.product_option.read"];
      };
      name?: string | null;
    };
    "ProductOption-admin.product_option.update": {
      values?: components["schemas"]["ProductOptionValue-admin.product_option.update"][];
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductOptionTranslation-admin.product_option.update"];
      };
    };
    "ProductOption-shop.product_option.read": {
      id?: number;
      code: string;
      values?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      name?: string | null;
    };
    "ProductOption.jsonld-admin.product_option.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      values?: components["schemas"]["ProductOptionValue.jsonld-admin.product_option.create"][];
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductOptionTranslation.jsonld-admin.product_option.create"];
      };
    };
    "ProductOption.jsonld-admin.product_option.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      values?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductOptionTranslation.jsonld-admin.product_option.read"];
      };
      name?: string | null;
    };
    "ProductOption.jsonld-admin.product_option.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      values?: components["schemas"]["ProductOptionValue.jsonld-admin.product_option.update"][];
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductOptionTranslation.jsonld-admin.product_option.update"];
      };
    };
    "ProductOption.jsonld-shop.product_option.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      values?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      name?: string | null;
    };
    ProductOptionInterface: {
      name?: string | null;
      position?: number;
      values?: string[];
      value?: components["schemas"]["ProductOptionValueInterface"][];
      translation?: components["schemas"]["TranslationInterface"][];
      id?: number;
      code?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      translations?: { [key: string]: string };
      currentLocale?: string;
      fallbackLocale?: string;
    };
    "ProductOptionInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name?: string | null;
      position?: number;
      values?: string[];
      value?: components["schemas"]["ProductOptionValueInterface.jsonld"][];
      translation?: components["schemas"]["TranslationInterface.jsonld"][];
      id?: number;
      code?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      translations?: { [key: string]: string };
      currentLocale?: string;
      fallbackLocale?: string;
    };
    ProductOptionTranslation: {
      id?: number;
      name: string;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductOptionTranslation-admin.product_option.create": {
      name: string;
      locale: string;
    };
    "ProductOptionTranslation-admin.product_option.read": {
      id?: number;
      name: string;
    };
    "ProductOptionTranslation-admin.product_option.update": {
      name: string;
      locale: string;
    };
    "ProductOptionTranslation.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductOptionTranslation.jsonld-admin.product_option.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string;
      locale: string;
    };
    "ProductOptionTranslation.jsonld-admin.product_option.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string;
    };
    "ProductOptionTranslation.jsonld-admin.product_option.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string;
      locale: string;
    };
    "ProductOptionValue-admin.product_option.create": {
      code: string;
      /** @example [object Object] */
      translations?: unknown[];
    };
    "ProductOptionValue-admin.product_option.update": {
      code: string;
      /** @example [object Object] */
      translations?: unknown[];
    };
    "ProductOptionValue-admin.product_option_value.read": {
      id?: number;
      code: string;
      /** Format: iri-reference */
      option?: string;
      /** @example [object Object] */
      translations?: unknown[];
      value?: string | null;
    };
    "ProductOptionValue-shop.product_option_value.read": {
      id?: number;
      code: string;
      /** Format: iri-reference */
      option?: string;
      value?: string | null;
    };
    "ProductOptionValue.jsonld-admin.product_option.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      /** @example [object Object] */
      translations?: unknown[];
    };
    "ProductOptionValue.jsonld-admin.product_option.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      /** @example [object Object] */
      translations?: unknown[];
    };
    "ProductOptionValue.jsonld-admin.product_option_value.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      /** Format: iri-reference */
      option?: string;
      /** @example [object Object] */
      translations?: unknown[];
      value?: string | null;
    };
    "ProductOptionValue.jsonld-shop.product_option_value.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      /** Format: iri-reference */
      option?: string;
      value?: string | null;
    };
    ProductOptionValueInterface: {
      /** Format: iri-reference */
      option?: string;
      value?: string | null;
      optionCode?: string | null;
      name?: string | null;
      translation?: components["schemas"]["TranslationInterface"][];
      id?: number;
      code?: string;
      translations?: {
        [key: string]: components["schemas"]["ProductOptionValueTranslation"];
      };
      currentLocale?: string;
      fallbackLocale?: string;
    };
    "ProductOptionValueInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      option?: string;
      value?: string | null;
      optionCode?: string | null;
      name?: string | null;
      translation?: components["schemas"]["TranslationInterface.jsonld"][];
      id?: number;
      code?: string;
      translations?: {
        [
          key: string
        ]: components["schemas"]["ProductOptionValueTranslation.jsonld"];
      };
      currentLocale?: string;
      fallbackLocale?: string;
    };
    ProductOptionValueTranslation: {
      id?: number;
      value?: string;
      locale?: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductOptionValueTranslation-admin.product_option.create": {
      value?: string;
      locale?: string;
    };
    "ProductOptionValueTranslation-admin.product_option.update": {
      value?: string;
      locale?: string;
    };
    "ProductOptionValueTranslation-admin.product_option_value.read": {
      id?: number;
      value?: string;
    };
    "ProductOptionValueTranslation.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      value?: string;
      locale?: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductOptionValueTranslation.jsonld-admin.product_option.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      value?: string;
      locale?: string;
    };
    "ProductOptionValueTranslation.jsonld-admin.product_option.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      value?: string;
      locale?: string;
    };
    "ProductOptionValueTranslation.jsonld-admin.product_option_value.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      value?: string;
    };
    ProductReview: {
      id?: number;
      title: string | null;
      rating?: number;
      comment?: string | null;
      /** Format: iri-reference */
      author?: string;
      /**
       * @default new
       * @example new
       */
      status?: string;
      /** Format: iri-reference */
      reviewSubject?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ProductReview-admin.product_review.read": {
      id?: number;
      title: string | null;
      rating?: number;
      comment?: string | null;
      /** Format: iri-reference */
      author?: string;
      /**
       * @default new
       * @example new
       */
      status?: string;
      /** Format: iri-reference */
      reviewSubject?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ProductReview-admin.product_review.update": {
      title: string | null;
      rating?: number;
      comment?: string | null;
    };
    "ProductReview.AddProductReview-shop.product_review.create": {
      title?: string | null;
      rating?: number | null;
      comment?: string | null;
      product?: string;
      email?: string | null;
    };
    "ProductReview.AddProductReview.jsonld-shop.product_review.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      title?: string | null;
      rating?: number | null;
      comment?: string | null;
      product?: string;
      email?: string | null;
    };
    "ProductReview.jsonld": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      title: string | null;
      rating?: number;
      comment?: string | null;
      /** Format: iri-reference */
      author?: string;
      /**
       * @default new
       * @example new
       */
      status?: string;
      /** Format: iri-reference */
      reviewSubject?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ProductReview.jsonld-admin.product_review.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      title: string | null;
      rating?: number;
      comment?: string | null;
      /** Format: iri-reference */
      author?: string;
      /**
       * @default new
       * @example new
       */
      status?: string;
      /** Format: iri-reference */
      reviewSubject?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ProductReview.jsonld-admin.product_review.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      title: string | null;
      rating?: number;
      comment?: string | null;
    };
    "ProductTaxon-admin.product_taxon.read": {
      id?: number;
      /** Format: iri-reference */
      taxon?: string;
    };
    "ProductTaxon-shop.product_taxon.read": {
      id?: number;
      /** Format: iri-reference */
      taxon?: string;
    };
    "ProductTaxon.jsonld-admin.product_taxon.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      /** Format: iri-reference */
      taxon?: string;
    };
    "ProductTaxon.jsonld-shop.product_taxon.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: iri-reference */
      taxon?: string;
    };
    ProductTranslation: {
      shortDescription?: string | null;
      id?: number;
      name: string;
      slug?: string;
      description?: string | null;
      metaKeywords?: string | null;
      metaDescription?: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductTranslation-admin.product.create": {
      name: string;
      slug?: string;
      locale: string;
    };
    "ProductTranslation-admin.product.read": {
      id?: number;
      name: string;
      slug?: string;
    };
    "ProductTranslation-admin.product.update": {
      name: string;
      slug?: string;
    };
    "ProductTranslation.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      shortDescription?: string | null;
      id?: number;
      name: string;
      slug?: string;
      description?: string | null;
      metaKeywords?: string | null;
      metaDescription?: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductTranslation.jsonld-admin.product.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string;
      slug?: string;
      locale: string;
    };
    "ProductTranslation.jsonld-admin.product.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string;
      slug?: string;
    };
    "ProductTranslation.jsonld-admin.product.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string;
      slug?: string;
    };
    "ProductVariant-admin.product_variant.create": {
      channelPricings?: {
        [
          key: string
        ]: components["schemas"]["ChannelPricing-admin.product_variant.create"];
      };
      code: string;
      /** Format: iri-reference */
      product?: string;
    };
    "ProductVariant-admin.product_variant.read": {
      channelPricings?: {
        [
          key: string
        ]: components["schemas"]["ChannelPricing-admin.product_variant.read"];
      };
      id?: number;
      code: string;
      /** Format: iri-reference */
      product?: string;
      optionValues?: string[];
      /** @example [object Object] */
      translations?: unknown[];
    };
    "ProductVariant-admin.product_variant.update": {
      channelPricings?: {
        [
          key: string
        ]: components["schemas"]["ChannelPricing-admin.product_variant.update"];
      };
    };
    "ProductVariant-shop.product_variant.read": {
      id?: number;
      code: string;
      /** Format: iri-reference */
      product?: string;
      optionValues?: string[];
      name?: string | null;
    };
    "ProductVariant.jsonld-admin.product_variant.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      channelPricings?: {
        [
          key: string
        ]: components["schemas"]["ChannelPricing.jsonld-admin.product_variant.create"];
      };
      code: string;
      /** Format: iri-reference */
      product?: string;
    };
    "ProductVariant.jsonld-admin.product_variant.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      channelPricings?: {
        [
          key: string
        ]: components["schemas"]["ChannelPricing.jsonld-admin.product_variant.read"];
      };
      id?: number;
      code: string;
      /** Format: iri-reference */
      product?: string;
      optionValues?: string[];
      /** @example [object Object] */
      translations?: unknown[];
    };
    "ProductVariant.jsonld-admin.product_variant.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      channelPricings?: {
        [
          key: string
        ]: components["schemas"]["ChannelPricing.jsonld-admin.product_variant.update"];
      };
    };
    "ProductVariant.jsonld-shop.product_variant.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      /** Format: iri-reference */
      product?: string;
      optionValues?: string[];
      name?: string | null;
    };
    ProductVariantInterface: {
      name?: string | null;
      descriptor?: string;
      optionValues?: string[];
      optionValue?: components["schemas"]["ProductOptionValueInterface"][];
      /** Format: iri-reference */
      product?: string;
      position?: number;
      translation?: components["schemas"]["TranslationInterface"][];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      id?: number;
      code?: string;
      enabled?: boolean;
      translations?: { [key: string]: string };
      currentLocale?: string;
      fallbackLocale?: string;
    };
    "ProductVariantInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name?: string | null;
      descriptor?: string;
      optionValues?: string[];
      optionValue?: components["schemas"]["ProductOptionValueInterface.jsonld"][];
      /** Format: iri-reference */
      product?: string;
      position?: number;
      translation?: components["schemas"]["TranslationInterface.jsonld"][];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      id?: number;
      code?: string;
      enabled?: boolean;
      translations?: { [key: string]: string };
      currentLocale?: string;
      fallbackLocale?: string;
    };
    ProductVariantTranslation: {
      id?: number;
      name: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductVariantTranslation-admin.product_variant.read": {
      id?: number;
      name: string | null;
      locale: string;
    };
    "ProductVariantTranslation.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ProductVariantTranslation.jsonld-admin.product_variant.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string | null;
      locale: string;
    };
    Promotion: {
      channels?: string[];
      id?: number;
      code?: string;
      name?: string;
      description?: string | null;
      priority?: number;
      exclusive?: boolean;
      usageLimit?: number | null;
      used?: number;
      /** Format: date-time */
      startsAt?: string | null;
      /** Format: date-time */
      endsAt?: string | null;
      couponBased?: boolean;
      coupons?: components["schemas"]["PromotionCoupon"][];
      rules?: components["schemas"]["PromotionRule"][];
      actions?: components["schemas"]["PromotionAction"][];
      /**
       * @default true
       * @example true
       */
      appliesToDiscounted?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      channel?: components["schemas"]["ChannelInterface"][];
      coupon?: components["schemas"]["PromotionCouponInterface"][];
      rule?: components["schemas"]["PromotionRuleInterface"][];
      action?: components["schemas"]["PromotionActionInterface"][];
    };
    "Promotion-admin.promotion.create": {
      code?: string;
      name?: string;
      /**
       * @default true
       * @example true
       */
      appliesToDiscounted?: boolean;
    };
    "Promotion-admin.promotion.read": {
      channels?: string[];
      id?: number;
      code?: string;
      name?: string;
      description?: string | null;
      priority?: number;
      exclusive?: boolean;
      usageLimit?: number | null;
      /** Format: date-time */
      startsAt?: string | null;
      /** Format: date-time */
      endsAt?: string | null;
      couponBased?: boolean;
      coupons?: components["schemas"]["PromotionCoupon-admin.promotion.read"][];
      rules?: components["schemas"]["PromotionRule-admin.promotion.read"][];
      actions?: components["schemas"]["PromotionAction-admin.promotion.read"][];
      /**
       * @default true
       * @example true
       */
      appliesToDiscounted?: boolean;
    };
    "Promotion.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      channels?: string[];
      id?: number;
      code?: string;
      name?: string;
      description?: string | null;
      priority?: number;
      exclusive?: boolean;
      usageLimit?: number | null;
      used?: number;
      /** Format: date-time */
      startsAt?: string | null;
      /** Format: date-time */
      endsAt?: string | null;
      couponBased?: boolean;
      coupons?: components["schemas"]["PromotionCoupon.jsonld"][];
      rules?: components["schemas"]["PromotionRule.jsonld"][];
      actions?: components["schemas"]["PromotionAction.jsonld"][];
      /**
       * @default true
       * @example true
       */
      appliesToDiscounted?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      channel?: components["schemas"]["ChannelInterface.jsonld"][];
      coupon?: components["schemas"]["PromotionCouponInterface.jsonld"][];
      rule?: components["schemas"]["PromotionRuleInterface.jsonld"][];
      action?: components["schemas"]["PromotionActionInterface.jsonld"][];
    };
    "Promotion.jsonld-admin.promotion.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code?: string;
      name?: string;
      /**
       * @default true
       * @example true
       */
      appliesToDiscounted?: boolean;
    };
    "Promotion.jsonld-admin.promotion.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      channels?: string[];
      id?: number;
      code?: string;
      name?: string;
      description?: string | null;
      priority?: number;
      exclusive?: boolean;
      usageLimit?: number | null;
      /** Format: date-time */
      startsAt?: string | null;
      /** Format: date-time */
      endsAt?: string | null;
      couponBased?: boolean;
      coupons?: components["schemas"]["PromotionCoupon.jsonld-admin.promotion.read"][];
      rules?: components["schemas"]["PromotionRule.jsonld-admin.promotion.read"][];
      actions?: components["schemas"]["PromotionAction.jsonld-admin.promotion.read"][];
      /**
       * @default true
       * @example true
       */
      appliesToDiscounted?: boolean;
    };
    PromotionAction: {
      id?: number;
      type?: string;
      configuration?: string[];
      /** Format: iri-reference */
      promotion?: string | null;
    };
    "PromotionAction-admin.promotion.read": { [key: string]: unknown };
    "PromotionAction.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string;
      configuration?: string[];
      /** Format: iri-reference */
      promotion?: string | null;
    };
    "PromotionAction.jsonld-admin.promotion.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
    };
    PromotionActionInterface: {
      type?: string;
      configuration?: string[];
      /** Format: iri-reference */
      promotion?: string | null;
      id?: number;
    };
    "PromotionActionInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      type?: string;
      configuration?: string[];
      /** Format: iri-reference */
      promotion?: string | null;
      id?: number;
    };
    PromotionCoupon: {
      perCustomerUsageLimit?: number | null;
      /**
       * @default true
       * @example true
       */
      reusableFromCancelledOrders?: boolean;
      id?: number;
      code?: string;
      usageLimit?: number | null;
      used?: number;
      /** Format: iri-reference */
      promotion?: string | null;
      /** Format: date-time */
      expiresAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      valid?: boolean;
    };
    "PromotionCoupon-admin.promotion.read": { [key: string]: unknown };
    "PromotionCoupon.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      perCustomerUsageLimit?: number | null;
      /**
       * @default true
       * @example true
       */
      reusableFromCancelledOrders?: boolean;
      id?: number;
      code?: string;
      usageLimit?: number | null;
      used?: number;
      /** Format: iri-reference */
      promotion?: string | null;
      /** Format: date-time */
      expiresAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      valid?: boolean;
    };
    "PromotionCoupon.jsonld-admin.promotion.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
    };
    PromotionCouponInterface: {
      usageLimit?: number | null;
      used?: number;
      /** Format: iri-reference */
      promotion?: string | null;
      /** Format: date-time */
      expiresAt?: string | null;
      valid?: boolean;
      code?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      id?: number;
    };
    "PromotionCouponInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      usageLimit?: number | null;
      used?: number;
      /** Format: iri-reference */
      promotion?: string | null;
      /** Format: date-time */
      expiresAt?: string | null;
      valid?: boolean;
      code?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      id?: number;
    };
    PromotionRule: {
      id?: number;
      type?: string;
      configuration?: string[];
      /** Format: iri-reference */
      promotion?: string | null;
    };
    "PromotionRule-admin.promotion.read": { [key: string]: unknown };
    "PromotionRule.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string;
      configuration?: string[];
      /** Format: iri-reference */
      promotion?: string | null;
    };
    "PromotionRule.jsonld-admin.promotion.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
    };
    PromotionRuleInterface: {
      type?: string;
      configuration?: string[];
      /** Format: iri-reference */
      promotion?: string | null;
      id?: number;
    };
    "PromotionRuleInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      type?: string;
      configuration?: string[];
      /** Format: iri-reference */
      promotion?: string | null;
      id?: number;
    };
    Province: {
      id?: number;
      code: string;
      name: string;
      abbreviation?: string | null;
      /** Format: iri-reference */
      country?: string;
    };
    "Province-admin.country.create": {
      code: string;
      name: string;
      abbreviation?: string | null;
    };
    "Province-admin.country.update": {
      code: string;
      name: string;
      abbreviation?: string | null;
    };
    "Province-admin.province.read": {
      id?: number;
      code: string;
      name: string;
      abbreviation?: string | null;
    };
    "Province-shop.country.read": {
      code: string;
      name: string;
    };
    "Province.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      name: string;
      abbreviation?: string | null;
      /** Format: iri-reference */
      country?: string;
    };
    "Province.jsonld-admin.country.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      name: string;
      abbreviation?: string | null;
    };
    "Province.jsonld-admin.country.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      name: string;
      abbreviation?: string | null;
    };
    "Province.jsonld-admin.province.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      name: string;
      abbreviation?: string | null;
    };
    "Province.jsonld-shop.country.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      name: string;
    };
    "ResetPasswordRequest-shop.reset_password.update": {
      newPassword: unknown;
      confirmNewPassword: unknown;
    };
    "ResetPasswordRequest.RequestResetPasswordToken-shop.reset_password.create": {
      email?: string;
      locale?: string | null;
    };
    "ResetPasswordRequest.RequestResetPasswordToken.jsonld-shop.reset_password.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      email?: string;
      locale?: string | null;
    };
    Shipment: {
      /** Format: iri-reference */
      order?: string;
      adjustments?: string[];
      adjustmentsTotal?: number;
      id?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      /** Format: iri-reference */
      method?: string;
      units?: string[];
      tracking?: string | null;
      /** Format: date-time */
      shippedAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      adjustment?: components["schemas"]["AdjustmentInterface"][];
      unit?: components["schemas"]["ShipmentUnitInterface"][];
      tracked?: boolean;
      shippables?: components["schemas"]["Collection"];
      shippingWeight?: number;
      shippingVolume?: number;
      shippingUnitCount?: number;
      shippingUnitTotal?: number;
    };
    "Shipment-admin.order.read": {
      id?: number;
      /** Format: iri-reference */
      method?: string;
    };
    "Shipment-admin.shipment.read": {
      /** Format: iri-reference */
      order?: string;
      id?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      /** Format: iri-reference */
      method?: string;
      units?: string[];
      tracking?: string | null;
      /** Format: date-time */
      shippedAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "Shipment-shop.cart.read": {
      id?: number;
      /** Format: iri-reference */
      method?: string;
    };
    "Shipment-shop.order.account.read": {
      /** Format: iri-reference */
      method?: string;
    };
    "Shipment-shop.shipment.read": {
      /** Format: iri-reference */
      order?: string;
      id?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      /** Format: iri-reference */
      method?: string;
      units?: string[];
      tracking?: string | null;
      /** Format: date-time */
      shippedAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "Shipment.ShipShipment-admin.shipment.update": {
      trackingCode?: string | null;
    };
    "Shipment.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      order?: string;
      adjustments?: string[];
      adjustmentsTotal?: number;
      id?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      /** Format: iri-reference */
      method?: string;
      units?: string[];
      tracking?: string | null;
      /** Format: date-time */
      shippedAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      adjustment?: components["schemas"]["AdjustmentInterface.jsonld"][];
      unit?: components["schemas"]["ShipmentUnitInterface.jsonld"][];
      tracked?: boolean;
      shippables?: components["schemas"]["Collection.jsonld"];
      shippingWeight?: number;
      shippingVolume?: number;
      shippingUnitCount?: number;
      shippingUnitTotal?: number;
    };
    "Shipment.jsonld-admin.order.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: iri-reference */
      method?: string;
    };
    "Shipment.jsonld-admin.shipment.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      /** Format: iri-reference */
      order?: string;
      id?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      /** Format: iri-reference */
      method?: string;
      units?: string[];
      tracking?: string | null;
      /** Format: date-time */
      shippedAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "Shipment.jsonld-shop.cart.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: iri-reference */
      method?: string;
    };
    "Shipment.jsonld-shop.order.account.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      method?: string;
    };
    "Shipment.jsonld-shop.shipment.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      order?: string;
      id?: number;
      /**
       * @default cart
       * @example cart
       */
      state?: string;
      /** Format: iri-reference */
      method?: string;
      units?: string[];
      tracking?: string | null;
      /** Format: date-time */
      shippedAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    ShipmentUnitInterface: {
      /** Format: iri-reference */
      shipment?: string | null;
      shippable?: Partial<components["schemas"]["ShippableInterface"]> | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      id?: number;
    };
    "ShipmentUnitInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      shipment?: string | null;
      shippable?: Partial<
        components["schemas"]["ShippableInterface.jsonld"]
      > | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      id?: number;
    };
    ShippableInterface: {
      shippingWeight?: number | null;
      shippingVolume?: number | null;
      shippingWidth?: number | null;
      shippingHeight?: number | null;
      shippingDepth?: number | null;
      /** Format: iri-reference */
      shippingCategory?: string | null;
    };
    "ShippableInterface-admin.order_item_unit.read": { [key: string]: unknown };
    "ShippableInterface-shop.order_item_unit.read": { [key: string]: unknown };
    "ShippableInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      shippingWeight?: number | null;
      shippingVolume?: number | null;
      shippingWidth?: number | null;
      shippingHeight?: number | null;
      shippingDepth?: number | null;
      /** Format: iri-reference */
      shippingCategory?: string | null;
    };
    "ShippableInterface.jsonld-admin.order_item_unit.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
    };
    "ShippableInterface.jsonld-shop.order_item_unit.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
    };
    ShippingCategory: {
      id?: number;
      code?: string;
      name: string;
      description?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ShippingCategory-admin.shipping_category.create": {
      code: string;
      name: string;
      description?: string | null;
    };
    "ShippingCategory-admin.shipping_category.read": {
      id?: number;
      code: string;
      name: string;
      description?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ShippingCategory-admin.shipping_category.update": {
      name: string;
      description?: string | null;
    };
    "ShippingCategory.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code?: string;
      name: string;
      description?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ShippingCategory.jsonld-admin.shipping_category.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      name: string;
      description?: string | null;
    };
    "ShippingCategory.jsonld-admin.shipping_category.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      name: string;
      description?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "ShippingCategory.jsonld-admin.shipping_category.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string;
      description?: string | null;
    };
    "ShippingMethod-admin.shipping_method.create": {
      /** Format: iri-reference */
      zone?: string;
      channels?: string[];
      code: string;
      position?: number;
      calculator?: string;
      configuration?: string[];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ShippingMethodTranslation-admin.shipping_method.create"];
      };
    };
    "ShippingMethod-admin.shipping_method.read": {
      /** Format: iri-reference */
      zone?: string;
      channels?: string[];
      id?: number;
      code: string;
      position?: number;
      calculator?: string;
      configuration?: string[];
      /** Format: date-time */
      archivedAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ShippingMethodTranslation-admin.shipping_method.read"];
      };
      name?: string | null;
    };
    "ShippingMethod-admin.shipping_method.update": {
      /** Format: iri-reference */
      zone?: string;
      channels?: string[];
      position?: number;
      calculator?: string;
      configuration?: string[];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ShippingMethodTranslation-admin.shipping_method.update"];
      };
    };
    "ShippingMethod-shop.shipping_method.read": {
      id?: number;
      code: string;
      position?: number;
      name?: string | null;
      description?: string | null;
    };
    "ShippingMethod.jsonld-admin.shipping_method.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      zone?: string;
      channels?: string[];
      code: string;
      position?: number;
      calculator?: string;
      configuration?: string[];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ShippingMethodTranslation.jsonld-admin.shipping_method.create"];
      };
    };
    "ShippingMethod.jsonld-admin.shipping_method.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      zone?: string;
      channels?: string[];
      id?: number;
      code: string;
      position?: number;
      calculator?: string;
      configuration?: string[];
      /** Format: date-time */
      archivedAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ShippingMethodTranslation.jsonld-admin.shipping_method.read"];
      };
      name?: string | null;
    };
    "ShippingMethod.jsonld-admin.shipping_method.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      zone?: string;
      channels?: string[];
      position?: number;
      calculator?: string;
      configuration?: string[];
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** @example [object Object] */
      translations?: {
        [
          key: string
        ]: components["schemas"]["ShippingMethodTranslation.jsonld-admin.shipping_method.update"];
      };
    };
    "ShippingMethod.jsonld-shop.shipping_method.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      position?: number;
      name?: string | null;
      description?: string | null;
    };
    ShippingMethodTranslation: {
      id?: number;
      name: string;
      description?: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ShippingMethodTranslation-admin.shipping_method.create": {
      name: string;
      description?: string | null;
      locale: string;
    };
    "ShippingMethodTranslation-admin.shipping_method.read": {
      id?: number;
      name: string;
      description?: string | null;
    };
    "ShippingMethodTranslation-admin.shipping_method.update": {
      name: string;
      description?: string | null;
      locale: string;
    };
    "ShippingMethodTranslation.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string;
      description?: string | null;
      locale: string;
      /** Format: iri-reference */
      translatable?: string;
    };
    "ShippingMethodTranslation.jsonld-admin.shipping_method.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string;
      description?: string | null;
      locale: string;
    };
    "ShippingMethodTranslation.jsonld-admin.shipping_method.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string;
      description?: string | null;
    };
    "ShippingMethodTranslation.jsonld-admin.shipping_method.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string;
      description?: string | null;
      locale: string;
    };
    ShopBillingData: {
      id?: number;
      company?: string | null;
      taxId?: string | null;
      countryCode?: string | null;
      street?: string | null;
      city?: string | null;
      postcode?: string | null;
    };
    "ShopBillingData-admin.channel.create": {
      company?: string | null;
      taxId?: string | null;
      countryCode?: string | null;
      street?: string | null;
      city?: string | null;
      postcode?: string | null;
    };
    "ShopBillingData-admin.shop_billing_data.read": {
      id?: number;
      company?: string | null;
      taxId?: string | null;
      countryCode?: string | null;
      street?: string | null;
      city?: string | null;
      postcode?: string | null;
    };
    "ShopBillingData.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      company?: string | null;
      taxId?: string | null;
      countryCode?: string | null;
      street?: string | null;
      city?: string | null;
      postcode?: string | null;
    };
    "ShopBillingData.jsonld-admin.channel.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      company?: string | null;
      taxId?: string | null;
      countryCode?: string | null;
      street?: string | null;
      city?: string | null;
      postcode?: string | null;
    };
    "ShopBillingData.jsonld-admin.shop_billing_data.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      company?: string | null;
      taxId?: string | null;
      countryCode?: string | null;
      street?: string | null;
      city?: string | null;
      postcode?: string | null;
    };
    ShopUser: {
      /** Format: iri-reference */
      customer?: string;
      id?: number;
      username?: string | null;
      usernameCanonical?: string | null;
      salt?: string;
      password?: string | null;
      plainPassword?: string | null;
      /** Format: date-time */
      lastLogin?: string | null;
      emailVerificationToken?: string | null;
      passwordResetToken?: string | null;
      /** Format: date-time */
      passwordRequestedAt?: string | null;
      /** Format: date-time */
      verifiedAt?: string | null;
      locked?: boolean;
      /** Format: date-time */
      expiresAt?: string | null;
      /** Format: date-time */
      credentialsExpireAt?: string | null;
      /**
       * @default ROLE_USER
       * @example ROLE_USER
       */
      roles?: string[];
      oauthAccounts?: components["schemas"]["UserOAuth"][];
      email?: string | null;
      emailCanonical?: string | null;
      encoderName?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      verified?: boolean;
      credentialsNonExpired?: boolean;
      accountNonExpired?: boolean;
      accountNonLocked?: boolean;
      role?: string[];
      oAuthAccounts?: components["schemas"]["UserOAuthInterface"][];
      oAuthAccount?: components["schemas"]["UserOAuthInterface"][];
    };
    "ShopUser-shop.customer.read": {
      verified?: boolean;
    };
    "ShopUser.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      customer?: string;
      id?: number;
      username?: string | null;
      usernameCanonical?: string | null;
      salt?: string;
      password?: string | null;
      plainPassword?: string | null;
      /** Format: date-time */
      lastLogin?: string | null;
      emailVerificationToken?: string | null;
      passwordResetToken?: string | null;
      /** Format: date-time */
      passwordRequestedAt?: string | null;
      /** Format: date-time */
      verifiedAt?: string | null;
      locked?: boolean;
      /** Format: date-time */
      expiresAt?: string | null;
      /** Format: date-time */
      credentialsExpireAt?: string | null;
      /**
       * @default ROLE_USER
       * @example ROLE_USER
       */
      roles?: string[];
      oauthAccounts?: components["schemas"]["UserOAuth.jsonld"][];
      email?: string | null;
      emailCanonical?: string | null;
      encoderName?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      verified?: boolean;
      credentialsNonExpired?: boolean;
      accountNonExpired?: boolean;
      accountNonLocked?: boolean;
      role?: string[];
      oAuthAccounts?: components["schemas"]["UserOAuthInterface.jsonld"][];
      oAuthAccount?: components["schemas"]["UserOAuthInterface.jsonld"][];
    };
    "ShopUser.jsonld-shop.customer.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      verified?: boolean;
    };
    TaxCategory: {
      id?: number;
      code?: string;
      name?: string;
      description?: string | null;
      rates?: components["schemas"]["TaxRate"][];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "TaxCategory-admin.tax_category.create": {
      code: string;
      name?: string;
      description?: string | null;
    };
    "TaxCategory-admin.tax_category.read": {
      id?: number;
      code: string;
      name?: string;
      description?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "TaxCategory-admin.tax_category.update": {
      name?: string;
      description?: string | null;
    };
    "TaxCategory.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code?: string;
      name?: string;
      description?: string | null;
      rates?: components["schemas"]["TaxRate.jsonld"][];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "TaxCategory.jsonld-admin.tax_category.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      name?: string;
      description?: string | null;
    };
    "TaxCategory.jsonld-admin.tax_category.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      name?: string;
      description?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    "TaxCategory.jsonld-admin.tax_category.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name?: string;
      description?: string | null;
    };
    TaxRate: {
      /** Format: iri-reference */
      zone?: string;
      id?: number;
      code?: string;
      /** Format: iri-reference */
      category?: string;
      name?: string;
      amount?: string;
      includedInPrice?: boolean;
      calculator?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      amountAsPercentage?: number;
      label?: string | null;
    };
    "TaxRate.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      /** Format: iri-reference */
      zone?: string;
      id?: number;
      code?: string;
      /** Format: iri-reference */
      category?: string;
      name?: string;
      amount?: string;
      includedInPrice?: boolean;
      calculator?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      amountAsPercentage?: number;
      label?: string | null;
    };
    Taxon: {
      images?: components["schemas"]["TaxonImage"][];
      id?: number;
      code: string;
      /** Format: iri-reference */
      root?: string | null;
      /** Format: iri-reference */
      parent?: string | null;
      children?: string[];
      left?: number;
      right?: number;
      level?: number;
      position?: number;
      translations?: { [key: string]: string };
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      translationClass?: unknown;
      name?: string | null;
      slug?: string | null;
      description?: string | null;
      ancestors?: components["schemas"]["Collection"];
      enabledChildren?: components["schemas"]["Collection"];
      fullname?: string | null;
      translation?: components["schemas"]["TranslationInterface"][];
    };
    "Taxon-admin.taxon.create": {
      code: string;
    };
    "Taxon-admin.taxon.read": {
      id?: number;
      code: string;
      translations?: {
        [
          key: string
        ]: components["schemas"]["TaxonTranslation-admin.taxon.read"];
      };
    };
    "Taxon-admin.taxon.update": {
      code: string;
    };
    "Taxon-shop.taxon.read": {
      id?: number;
      code: string;
      children?: string[];
      name?: string | null;
      slug?: string | null;
      description?: string | null;
    };
    "Taxon.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      images?: components["schemas"]["TaxonImage.jsonld"][];
      id?: number;
      code: string;
      /** Format: iri-reference */
      root?: string | null;
      /** Format: iri-reference */
      parent?: string | null;
      children?: string[];
      left?: number;
      right?: number;
      level?: number;
      position?: number;
      translations?: { [key: string]: string };
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      translationClass?: unknown;
      name?: string | null;
      slug?: string | null;
      description?: string | null;
      ancestors?: components["schemas"]["Collection.jsonld"];
      enabledChildren?: components["schemas"]["Collection.jsonld"];
      fullname?: string | null;
      translation?: components["schemas"]["TranslationInterface.jsonld"][];
    };
    "Taxon.jsonld-admin.taxon.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
    };
    "Taxon.jsonld-admin.taxon.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      translations?: {
        [
          key: string
        ]: components["schemas"]["TaxonTranslation.jsonld-admin.taxon.read"];
      };
    };
    "Taxon.jsonld-admin.taxon.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
    };
    "Taxon.jsonld-shop.taxon.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      children?: string[];
      name?: string | null;
      slug?: string | null;
      description?: string | null;
    };
    TaxonImage: {
      id?: number;
      type?: string | null;
      /** Format: binary */
      file?: string | null;
      path?: string;
      /** Format: iri-reference */
      owner?: string;
    };
    "TaxonImage.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string | null;
      /** Format: binary */
      file?: string | null;
      path?: string;
      /** Format: iri-reference */
      owner?: string;
    };
    "TaxonTranslation-admin.taxon.read": {
      id?: number;
      name: string;
      slug: string;
      description?: string | null;
    };
    "TaxonTranslation-admin.taxon.read_admin.taxon_translation.read": {
      id?: number;
      name: string;
      slug: string;
      description?: string | null;
    };
    "TaxonTranslation-admin.taxon.read_shop.taxon_translation.read": {
      id?: number;
      name: string;
      slug: string;
      description?: string | null;
    };
    "TaxonTranslation.jsonld-admin.taxon.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string;
      slug: string;
      description?: string | null;
    };
    "TaxonTranslation.jsonld-admin.taxon.read_admin.taxon_translation.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      name: string;
      slug: string;
      description?: string | null;
    };
    "TaxonTranslation.jsonld-admin.taxon.read_shop.taxon_translation.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name: string;
      slug: string;
      description?: string | null;
    };
    TranslatableInterface: {
      translations?: components["schemas"]["TranslationInterface"][];
      translation?: components["schemas"]["TranslationInterface"][];
      currentLocale?: string;
      fallbackLocale?: string;
    };
    "TranslatableInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      translations?: components["schemas"]["TranslationInterface.jsonld"][];
      translation?: components["schemas"]["TranslationInterface.jsonld"][];
      currentLocale?: string;
      fallbackLocale?: string;
    };
    TranslationInterface: {
      translatable?: Partial<
        components["schemas"]["TranslatableInterface"]
      > | null;
      locale?: string | null;
    };
    "TranslationInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      translatable?: Partial<
        components["schemas"]["TranslatableInterface.jsonld"]
      > | null;
      locale?: string | null;
    };
    UserOAuth: {
      id?: number;
      provider?: string;
      identifier?: string;
      accessToken?: string | null;
      refreshToken?: string | null;
      user?: Partial<components["schemas"]["ShopUser"]> | null;
    };
    "UserOAuth.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      provider?: string;
      identifier?: string;
      accessToken?: string | null;
      refreshToken?: string | null;
      user?: Partial<components["schemas"]["ShopUser.jsonld"]> | null;
    };
    UserOAuthInterface: {
      provider?: string;
      identifier?: string;
      accessToken?: string | null;
      refreshToken?: string | null;
      user?: Partial<components["schemas"]["ShopUser"]> | null;
      id?: number;
    };
    "UserOAuthInterface.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      provider?: string;
      identifier?: string;
      accessToken?: string | null;
      refreshToken?: string | null;
      user?: Partial<components["schemas"]["ShopUser.jsonld"]> | null;
      id?: number;
    };
    "VerifyCustomerAccount-shop.account_verification.update": {
      token?: string;
    };
    "VerifyCustomerAccount.ResendVerificationEmail-shop.resend_verification_email.create": {
      [key: string]: unknown;
    };
    "VerifyCustomerAccount.ResendVerificationEmail.jsonld-shop.resend_verification_email.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
    };
    Zone: {
      id?: number;
      code?: string;
      name: string;
      type?: string;
      /**
       * @default all
       * @example all
       */
      scope?: string | null;
      members?: string[];
      types?: unknown;
    };
    "Zone-admin.zone.create": {
      code: string;
      name: string;
      type?: string;
      /**
       * @default all
       * @example all
       */
      scope?: string | null;
      members?: components["schemas"]["ZoneMember-admin.zone.create"][];
    };
    "Zone-admin.zone.read": {
      id?: number;
      code: string;
      name: string;
      type?: string;
      /**
       * @default all
       * @example all
       */
      scope?: string | null;
      members?: string[];
    };
    "Zone-admin.zone.update": {
      name: string;
      members?: components["schemas"]["ZoneMember-admin.zone.update"][];
    };
    "Zone.jsonld": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code?: string;
      name: string;
      type?: string;
      /**
       * @default all
       * @example all
       */
      scope?: string | null;
      members?: string[];
      types?: unknown;
    };
    "Zone.jsonld-admin.zone.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
      name: string;
      type?: string;
      /**
       * @default all
       * @example all
       */
      scope?: string | null;
      members?: components["schemas"]["ZoneMember.jsonld-admin.zone.create"][];
    };
    "Zone.jsonld-admin.zone.read": {
      "@id"?: string;
      "@type"?: string;
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      id?: number;
      code: string;
      name: string;
      type?: string;
      /**
       * @default all
       * @example all
       */
      scope?: string | null;
      members?: string[];
    };
    "Zone.jsonld-admin.zone.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      name: string;
      members?: components["schemas"]["ZoneMember.jsonld-admin.zone.update"][];
    };
    ZoneMember: {
      id?: number;
      code: string;
      /** Format: iri-reference */
      belongsTo?: string | null;
    };
    "ZoneMember-admin.zone.create": {
      code: string;
    };
    "ZoneMember-admin.zone.update": {
      code: string;
    };
    "ZoneMember-admin.zone_member.read": {
      id?: number;
      code: string;
    };
    "ZoneMember.jsonld": {
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
      /** Format: iri-reference */
      belongsTo?: string | null;
    };
    "ZoneMember.jsonld-admin.zone.create": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
    };
    "ZoneMember.jsonld-admin.zone.update": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      code: string;
    };
    "ZoneMember.jsonld-admin.zone_member.read": {
      "@context"?:
        | string
        | ({
            "@vocab": string;
            /** @enum {string} */
            hydra: "http://www.w3.org/ns/hydra/core#";
          } & { [key: string]: unknown });
      "@id"?: string;
      "@type"?: string;
      id?: number;
      code: string;
    };
  };
  responses: {};
  parameters: {};
  requestBodies: {};
  headers: {};
}

export interface operations {
  /** Retrieves a Address resource. */
  admin_getAddressItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Address resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Address.jsonld-admin.address.read"];
          "application/json": components["schemas"]["Address-admin.address.read"];
          "text/html": components["schemas"]["Address-admin.address.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Adjustment resource. */
  admin_getAdjustmentItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Adjustment resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Adjustment.jsonld-admin.adjustment.read"];
          "application/json": components["schemas"]["Adjustment-admin.adjustment.read"];
          "text/html": components["schemas"]["Adjustment-admin.adjustment.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Administrator resources. */
  admin_getAdministratorCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Administrator collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Administrator.jsonld-admin.admin_user.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Administrator-admin.admin_user.read"][];
          "text/html": components["schemas"]["Administrator-admin.admin_user.read"][];
        };
      };
    };
  };
  /** Creates a Administrator resource. */
  admin_postAdministratorCollection: {
    parameters: {};
    responses: {
      /** Administrator resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Administrator.jsonld-admin.admin_user.create"];
          "application/json": components["schemas"]["Administrator-admin.admin_user.create"];
          "text/html": components["schemas"]["Administrator-admin.admin_user.create"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Administrator resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Administrator.jsonld"];
        "application/json": components["schemas"]["Administrator"];
        "text/html": components["schemas"]["Administrator"];
      };
    };
  };
  /** Retrieves a Administrator resource. */
  admin_getAdministratorItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Administrator resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Administrator.jsonld-admin.admin_user.read"];
          "application/json": components["schemas"]["Administrator-admin.admin_user.read"];
          "text/html": components["schemas"]["Administrator-admin.admin_user.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the Administrator resource. */
  admin_putAdministratorItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Administrator resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Administrator.jsonld"];
          "application/json": components["schemas"]["Administrator"];
          "text/html": components["schemas"]["Administrator"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Administrator resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Administrator.jsonld-admin.admin_user.update"];
        "application/json": components["schemas"]["Administrator-admin.admin_user.update"];
        "text/html": components["schemas"]["Administrator-admin.admin_user.update"];
      };
    };
  };
  /** Removes the Administrator resource. */
  admin_deleteAdministratorItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Administrator resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Creates a AvatarImage resource. */
  admin_postAvatarImageCollection: {
    parameters: {};
    responses: {
      /** AvatarImage resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["AvatarImage.jsonld-admin.avatar_image.read"];
          "application/json": components["schemas"]["AvatarImage-admin.avatar_image.read"];
          "text/html": components["schemas"]["AvatarImage-admin.avatar_image.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    requestBody: {
      content: {
        "multipart/form-data": {
          /** Format: binary */
          file?: string;
          /** Format: iri-reference */
          owner?: string;
        };
      };
    };
  };
  /** Retrieves a AvatarImage resource. */
  admin_getAvatarImageItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** AvatarImage resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["AvatarImage.jsonld-admin.avatar_image.read"];
          "application/json": components["schemas"]["AvatarImage-admin.avatar_image.read"];
          "text/html": components["schemas"]["AvatarImage-admin.avatar_image.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Removes the AvatarImage resource. */
  admin_deleteAvatarImageItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** AvatarImage resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a CatalogPromotionAction resource. */
  admin_getCatalogPromotionActionItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** CatalogPromotionAction resource */
      204: {
        content: {
          "application/ld+json": unknown;
          "application/json": unknown;
          "text/html": unknown;
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a CatalogPromotionScope resource. */
  admin_getCatalogPromotionScopeItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** CatalogPromotionScope resource */
      204: {
        content: {
          "application/ld+json": unknown;
          "application/json": unknown;
          "text/html": unknown;
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a CatalogPromotionTranslation resource. */
  admin_getCatalogPromotionTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** CatalogPromotionTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["CatalogPromotionTranslation.jsonld"];
          "application/json": components["schemas"]["CatalogPromotionTranslation"];
          "text/html": components["schemas"]["CatalogPromotionTranslation"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of CatalogPromotion resources. */
  admin_getCatalogPromotionCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** CatalogPromotion collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["CatalogPromotion.jsonld-admin.catalog_promotion.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["CatalogPromotion-admin.catalog_promotion.read"][];
          "text/html": components["schemas"]["CatalogPromotion-admin.catalog_promotion.read"][];
        };
      };
    };
  };
  /**
   * Example configuration for `for_variants` scope type:
   *
   * ```
   * {
   *     "type": "for_variants",
   *     "configuration": {
   *         "variants": [
   *             "string"
   *         ]
   *     }
   * }
   * ```
   *
   * Example configuration for `percentage_discount` action type:
   *
   * ```
   * {
   *     "type": "percentage_discount",
   *     "configuration": {
   *         "amount": float
   *     }
   * }
   * ```
   */
  admin_postCatalogPromotionCollection: {
    parameters: {};
    responses: {
      /** CatalogPromotion resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["CatalogPromotion.jsonld-admin.catalog_promotion.read"];
          "application/json": components["schemas"]["CatalogPromotion-admin.catalog_promotion.read"];
          "text/html": components["schemas"]["CatalogPromotion-admin.catalog_promotion.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new CatalogPromotion resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["CatalogPromotion.jsonld-admin.catalog_promotion.create"];
        "application/json": components["schemas"]["CatalogPromotion-admin.catalog_promotion.create"];
        "text/html": components["schemas"]["CatalogPromotion-admin.catalog_promotion.create"];
      };
    };
  };
  /** Retrieves a CatalogPromotion resource. */
  admin_getCatalogPromotionItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** CatalogPromotion resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["CatalogPromotion.jsonld-admin.catalog_promotion.read"];
          "application/json": components["schemas"]["CatalogPromotion-admin.catalog_promotion.read"];
          "text/html": components["schemas"]["CatalogPromotion-admin.catalog_promotion.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /**
   * Example configuration for `for_variants` scope type:
   *
   * ```
   * {
   *     "type": "for_variants",
   *     "configuration": {
   *         "variants": [
   *             "string"
   *         ]
   *     }
   * }
   * ```
   *
   * Example configuration for `percentage_discount` action type:
   *
   * ```
   * {
   *     "type": "percentage_discount",
   *     "configuration": {
   *         "amount": float
   *     }
   * }
   * ```
   */
  admin_putCatalogPromotionItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** CatalogPromotion resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["CatalogPromotion.jsonld-admin.catalog_promotion.read"];
          "application/json": components["schemas"]["CatalogPromotion-admin.catalog_promotion.read"];
          "text/html": components["schemas"]["CatalogPromotion-admin.catalog_promotion.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated CatalogPromotion resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["CatalogPromotion.jsonld-admin.catalog_promotion.update"];
        "application/json": components["schemas"]["CatalogPromotion-admin.catalog_promotion.update"];
        "text/html": components["schemas"]["CatalogPromotion-admin.catalog_promotion.update"];
      };
    };
  };
  /** Retrieves a ChannelPricing resource. */
  admin_getChannelPricingItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ChannelPricing resource */
      204: {
        content: {
          "application/ld+json": unknown;
          "application/json": unknown;
          "text/html": unknown;
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Channel resources. */
  admin_getChannelCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Channel collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Channel.jsonld-admin.channel.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Channel-admin.channel.read"][];
          "text/html": components["schemas"]["Channel-admin.channel.read"][];
        };
      };
    };
  };
  /** Creates a Channel resource. */
  admin_postChannelCollection: {
    parameters: {};
    responses: {
      /** Channel resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Channel.jsonld"];
          "application/json": components["schemas"]["Channel"];
          "text/html": components["schemas"]["Channel"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Channel resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Channel.jsonld-admin.channel.create"];
        "application/json": components["schemas"]["Channel-admin.channel.create"];
        "text/html": components["schemas"]["Channel-admin.channel.create"];
      };
    };
  };
  /** Retrieves a Channel resource. */
  admin_getChannelItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Channel resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Channel.jsonld-admin.channel.read"];
          "application/json": components["schemas"]["Channel-admin.channel.read"];
          "text/html": components["schemas"]["Channel-admin.channel.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Channel resource. */
  api_channels_shop_billing_data_get_subresourceChannelSubresource: {
    parameters: {
      path: {
        /** Channel identifier */
        code: string;
      };
    };
    responses: {
      /** Channel resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShopBillingData.jsonld"];
          "application/json": components["schemas"]["ShopBillingData"];
          "text/html": components["schemas"]["ShopBillingData"];
        };
      };
    };
  };
  /** Retrieves the collection of Country resources. */
  admin_getCountryCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Country collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Country.jsonld-admin.country.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Country-admin.country.read"][];
          "text/html": components["schemas"]["Country-admin.country.read"][];
        };
      };
    };
  };
  /** Creates a Country resource. */
  admin_postCountryCollection: {
    parameters: {};
    responses: {
      /** Country resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Country.jsonld"];
          "application/json": components["schemas"]["Country"];
          "text/html": components["schemas"]["Country"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Country resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Country.jsonld-admin.country.create"];
        "application/json": components["schemas"]["Country-admin.country.create"];
        "text/html": components["schemas"]["Country-admin.country.create"];
      };
    };
  };
  /** Retrieves a Country resource. */
  admin_getCountryItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Country resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Country.jsonld-admin.country.read"];
          "application/json": components["schemas"]["Country-admin.country.read"];
          "text/html": components["schemas"]["Country-admin.country.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the Country resource. */
  admin_putCountryItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Country resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Country.jsonld"];
          "application/json": components["schemas"]["Country"];
          "text/html": components["schemas"]["Country"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Country resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Country.jsonld-admin.country.update"];
        "application/json": components["schemas"]["Country-admin.country.update"];
        "text/html": components["schemas"]["Country-admin.country.update"];
      };
    };
  };
  /** Retrieves a Country resource. */
  api_countries_provinces_get_subresourceCountrySubresource: {
    parameters: {
      path: {
        /** Country identifier */
        code: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Country resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Province.jsonld"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Province"][];
          "text/html": components["schemas"]["Province"][];
        };
      };
    };
  };
  /** Retrieves the collection of Currency resources. */
  admin_getCurrencyCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Currency collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Currency.jsonld-admin.currency.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Currency-admin.currency.read"][];
          "text/html": components["schemas"]["Currency-admin.currency.read"][];
        };
      };
    };
  };
  /** Creates a Currency resource. */
  admin_postCurrencyCollection: {
    parameters: {};
    responses: {
      /** Currency resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Currency.jsonld"];
          "application/json": components["schemas"]["Currency"];
          "text/html": components["schemas"]["Currency"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Currency resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Currency.jsonld"];
        "application/json": components["schemas"]["Currency"];
        "text/html": components["schemas"]["Currency"];
      };
    };
  };
  /** Retrieves a Currency resource. */
  admin_getCurrencyItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Currency resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Currency.jsonld-admin.currency.read"];
          "application/json": components["schemas"]["Currency-admin.currency.read"];
          "text/html": components["schemas"]["Currency-admin.currency.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of CustomerGroup resources. */
  admin_getCustomerGroupCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** CustomerGroup collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["CustomerGroup.jsonld-admin.customer_group.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["CustomerGroup-admin.customer_group.read"][];
          "text/html": components["schemas"]["CustomerGroup-admin.customer_group.read"][];
        };
      };
    };
  };
  /** Creates a CustomerGroup resource. */
  admin_postCustomerGroupCollection: {
    parameters: {};
    responses: {
      /** CustomerGroup resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["CustomerGroup.jsonld"];
          "application/json": components["schemas"]["CustomerGroup"];
          "text/html": components["schemas"]["CustomerGroup"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new CustomerGroup resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["CustomerGroup.jsonld-admin.customer_group.create"];
        "application/json": components["schemas"]["CustomerGroup-admin.customer_group.create"];
        "text/html": components["schemas"]["CustomerGroup-admin.customer_group.create"];
      };
    };
  };
  /** Retrieves a CustomerGroup resource. */
  admin_getCustomerGroupItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** CustomerGroup resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["CustomerGroup.jsonld-admin.customer_group.read"];
          "application/json": components["schemas"]["CustomerGroup-admin.customer_group.read"];
          "text/html": components["schemas"]["CustomerGroup-admin.customer_group.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the CustomerGroup resource. */
  admin_putCustomerGroupItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** CustomerGroup resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["CustomerGroup.jsonld"];
          "application/json": components["schemas"]["CustomerGroup"];
          "text/html": components["schemas"]["CustomerGroup"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated CustomerGroup resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["CustomerGroup.jsonld-admin.customer_group.update"];
        "application/json": components["schemas"]["CustomerGroup-admin.customer_group.update"];
        "text/html": components["schemas"]["CustomerGroup-admin.customer_group.update"];
      };
    };
  };
  /** Removes the CustomerGroup resource. */
  admin_deleteCustomerGroupItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** CustomerGroup resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Customer resource. */
  admin_getCustomerItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Customer resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Customer.jsonld-admin.customer.read"];
          "application/json": components["schemas"]["Customer-admin.customer.read"];
          "text/html": components["schemas"]["Customer-admin.customer.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of ExchangeRate resources. */
  admin_getExchangeRateCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
        currencyCode?: string;
      };
    };
    responses: {
      /** ExchangeRate collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ExchangeRate.jsonld-admin.exchange_rate.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ExchangeRate-admin.exchange_rate.read"][];
          "text/html": components["schemas"]["ExchangeRate-admin.exchange_rate.read"][];
        };
      };
    };
  };
  /** Creates a ExchangeRate resource. */
  admin_postExchangeRateCollection: {
    parameters: {};
    responses: {
      /** ExchangeRate resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["ExchangeRate.jsonld"];
          "application/json": components["schemas"]["ExchangeRate"];
          "text/html": components["schemas"]["ExchangeRate"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new ExchangeRate resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ExchangeRate.jsonld-admin.exchange_rate.create"];
        "application/json": components["schemas"]["ExchangeRate-admin.exchange_rate.create"];
        "text/html": components["schemas"]["ExchangeRate-admin.exchange_rate.create"];
      };
    };
  };
  /** Retrieves a ExchangeRate resource. */
  admin_getExchangeRateItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ExchangeRate resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ExchangeRate.jsonld-admin.exchange_rate.read"];
          "application/json": components["schemas"]["ExchangeRate-admin.exchange_rate.read"];
          "text/html": components["schemas"]["ExchangeRate-admin.exchange_rate.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the ExchangeRate resource. */
  admin_putExchangeRateItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ExchangeRate resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ExchangeRate.jsonld"];
          "application/json": components["schemas"]["ExchangeRate"];
          "text/html": components["schemas"]["ExchangeRate"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ExchangeRate resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ExchangeRate.jsonld-admin.exchange_rate.update"];
        "application/json": components["schemas"]["ExchangeRate-admin.exchange_rate.update"];
        "text/html": components["schemas"]["ExchangeRate-admin.exchange_rate.update"];
      };
    };
  };
  /** Removes the ExchangeRate resource. */
  admin_deleteExchangeRateItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ExchangeRate resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Locale resources. */
  admin_getLocaleCollection: {
    parameters: {};
    responses: {
      /** Locale collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Locale.jsonld-admin.locale.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Locale-admin.locale.read"][];
          "text/html": components["schemas"]["Locale-admin.locale.read"][];
        };
      };
    };
  };
  /** Creates a Locale resource. */
  admin_postLocaleCollection: {
    parameters: {};
    responses: {
      /** Locale resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Locale.jsonld"];
          "application/json": components["schemas"]["Locale"];
          "text/html": components["schemas"]["Locale"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Locale resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Locale.jsonld-admin.locale.create"];
        "application/json": components["schemas"]["Locale-admin.locale.create"];
        "text/html": components["schemas"]["Locale-admin.locale.create"];
      };
    };
  };
  /** Retrieves a Locale resource. */
  admin_getLocaleItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Locale resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Locale.jsonld-admin.locale.read"];
          "application/json": components["schemas"]["Locale-admin.locale.read"];
          "text/html": components["schemas"]["Locale-admin.locale.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a OrderItemUnit resource. */
  admin_getOrderItemUnitItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** OrderItemUnit resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["OrderItemUnit.jsonld-admin.order_item_unit.read"];
          "application/json": components["schemas"]["OrderItemUnit-admin.order_item_unit.read"];
          "text/html": components["schemas"]["OrderItemUnit-admin.order_item_unit.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a OrderItem resource. */
  admin_getOrderItemItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** OrderItem resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["OrderItem.jsonld-admin.order_item.read"];
          "application/json": components["schemas"]["OrderItem-admin.order_item.read"];
          "text/html": components["schemas"]["OrderItem-admin.order_item.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a OrderItem resource. */
  api_order_items_adjustments_get_subresourceOrderItemSubresource: {
    parameters: {
      path: {
        /** OrderItem identifier */
        id: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** OrderItem resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Adjustment.jsonld"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Adjustment"][];
          "text/html": components["schemas"]["Adjustment"][];
        };
      };
    };
  };
  /** Retrieves the collection of Order resources. */
  admin_getOrderCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Order collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Order.jsonld-admin.order.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Order-admin.order.read"][];
          "text/html": components["schemas"]["Order-admin.order.read"][];
        };
      };
    };
  };
  /** Retrieves a Order resource. */
  admin_getOrderItem: {
    parameters: {
      path: {
        /** Resource identifier */
        tokenValue: string;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-admin.order.read"];
          "application/json": components["schemas"]["Order-admin.order.read"];
          "text/html": components["schemas"]["Order-admin.order.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Updates the Order resource. */
  admin_cancelOrderItem: {
    parameters: {
      path: {
        /** Resource identifier */
        tokenValue: string;
      };
    };
    responses: {
      /** Order resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-admin.order.read"];
          "application/json": components["schemas"]["Order-admin.order.read"];
          "text/html": components["schemas"]["Order-admin.order.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Order resource */
    requestBody: {
      content: {
        "application/merge-patch+json": unknown;
      };
    };
  };
  /** Retrieves a Order resource. */
  api_orders_payments_get_subresourceOrderSubresource: {
    parameters: {
      path: {
        /** Order identifier */
        tokenValue: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Payment.jsonld"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Payment"][];
          "text/html": components["schemas"]["Payment"][];
        };
      };
    };
  };
  /** Retrieves a Order resource. */
  api_orders_shipments_get_subresourceOrderSubresource: {
    parameters: {
      path: {
        /** Order identifier */
        tokenValue: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Shipment.jsonld"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Shipment"][];
          "text/html": components["schemas"]["Shipment"][];
        };
      };
    };
  };
  /** Retrieves a PaymentMethod resource. */
  admin_getPaymentMethodItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** PaymentMethod resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["PaymentMethod.jsonld-admin.payment_method.read"];
          "application/json": components["schemas"]["PaymentMethod-admin.payment_method.read"];
          "text/html": components["schemas"]["PaymentMethod-admin.payment_method.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Payment resources. */
  admin_getPaymentCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
        state?: string;
        "state[]"?: string[];
        "order.channel.code"?: string;
        "order.channel.code[]"?: string[];
      };
    };
    responses: {
      /** Payment collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Payment.jsonld-admin.payment.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Payment-admin.payment.read"][];
          "text/html": components["schemas"]["Payment-admin.payment.read"][];
        };
      };
    };
  };
  /** Retrieves a Payment resource. */
  admin_getPaymentItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Payment resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Payment.jsonld-admin.payment.read"];
          "application/json": components["schemas"]["Payment-admin.payment.read"];
          "text/html": components["schemas"]["Payment-admin.payment.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Updates the Payment resource. */
  admin_completePaymentItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Payment resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Payment.jsonld"];
          "application/json": components["schemas"]["Payment"];
          "text/html": components["schemas"]["Payment"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Payment resource */
    requestBody: {
      content: {
        "application/merge-patch+json": unknown;
      };
    };
  };
  /** Retrieves a ProductAssociationTypeTranslation resource. */
  admin_getProductAssociationTypeTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductAssociationTypeTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductAssociationTypeTranslation.jsonld"];
          "application/json": components["schemas"]["ProductAssociationTypeTranslation"];
          "text/html": components["schemas"]["ProductAssociationTypeTranslation"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of ProductAssociationType resources. */
  admin_getProductAssociationTypeCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
        "translations.name"?: string;
        code?: string;
      };
    };
    responses: {
      /** ProductAssociationType collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ProductAssociationType.jsonld-admin.product_association_type.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ProductAssociationType-admin.product_association_type.read"][];
          "text/html": components["schemas"]["ProductAssociationType-admin.product_association_type.read"][];
        };
      };
    };
  };
  /** Creates a ProductAssociationType resource. */
  admin_postProductAssociationTypeCollection: {
    parameters: {};
    responses: {
      /** ProductAssociationType resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["ProductAssociationType.jsonld-admin.product_association_type.read"];
          "application/json": components["schemas"]["ProductAssociationType-admin.product_association_type.read"];
          "text/html": components["schemas"]["ProductAssociationType-admin.product_association_type.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new ProductAssociationType resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ProductAssociationType.jsonld-admin.product_association_type.create"];
        "application/json": components["schemas"]["ProductAssociationType-admin.product_association_type.create"];
        "text/html": components["schemas"]["ProductAssociationType-admin.product_association_type.create"];
      };
    };
  };
  /** Retrieves a ProductAssociationType resource. */
  admin_getProductAssociationTypeItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductAssociationType resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductAssociationType.jsonld-admin.product_association_type.read"];
          "application/json": components["schemas"]["ProductAssociationType-admin.product_association_type.read"];
          "text/html": components["schemas"]["ProductAssociationType-admin.product_association_type.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the ProductAssociationType resource. */
  admin_putProductAssociationTypeItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductAssociationType resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductAssociationType.jsonld-admin.product_association_type.read"];
          "application/json": components["schemas"]["ProductAssociationType-admin.product_association_type.read"];
          "text/html": components["schemas"]["ProductAssociationType-admin.product_association_type.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ProductAssociationType resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ProductAssociationType.jsonld-admin.product_association_type.update"];
        "application/json": components["schemas"]["ProductAssociationType-admin.product_association_type.update"];
        "text/html": components["schemas"]["ProductAssociationType-admin.product_association_type.update"];
      };
    };
  };
  /** Removes the ProductAssociationType resource. */
  admin_deleteProductAssociationTypeItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductAssociationType resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of ProductImage resources. */
  admin_getProductImageCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** ProductImage collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ProductImage.jsonld-admin.product_image.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ProductImage-admin.product_image.read"][];
          "text/html": components["schemas"]["ProductImage-admin.product_image.read"][];
        };
      };
    };
  };
  /** Retrieves a ProductImage resource. */
  admin_getProductImageItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductImage resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductImage.jsonld-admin.product_image.read"];
          "application/json": components["schemas"]["ProductImage-admin.product_image.read"];
          "text/html": components["schemas"]["ProductImage-admin.product_image.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ProductOptionTranslation resource. */
  admin_getProductOptionTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductOptionTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductOptionTranslation.jsonld"];
          "application/json": components["schemas"]["ProductOptionTranslation"];
          "text/html": components["schemas"]["ProductOptionTranslation"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ProductOptionValue resource. */
  admin_getProductOptionValueItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductOptionValue resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductOptionValue.jsonld-admin.product_option_value.read"];
          "application/json": components["schemas"]["ProductOptionValue-admin.product_option_value.read"];
          "text/html": components["schemas"]["ProductOptionValue-admin.product_option_value.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of ProductOption resources. */
  admin_getProductOptionCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** ProductOption collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ProductOption.jsonld-admin.product_option.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ProductOption-admin.product_option.read"][];
          "text/html": components["schemas"]["ProductOption-admin.product_option.read"][];
        };
      };
    };
  };
  /** Creates a ProductOption resource. */
  admin_postProductOptionCollection: {
    parameters: {};
    responses: {
      /** ProductOption resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["ProductOption.jsonld-admin.product_option.read"];
          "application/json": components["schemas"]["ProductOption-admin.product_option.read"];
          "text/html": components["schemas"]["ProductOption-admin.product_option.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new ProductOption resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ProductOption.jsonld-admin.product_option.create"];
        "application/json": components["schemas"]["ProductOption-admin.product_option.create"];
        "text/html": components["schemas"]["ProductOption-admin.product_option.create"];
      };
    };
  };
  /** Retrieves a ProductOption resource. */
  admin_getProductOptionItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductOption resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductOption.jsonld-admin.product_option.read"];
          "application/json": components["schemas"]["ProductOption-admin.product_option.read"];
          "text/html": components["schemas"]["ProductOption-admin.product_option.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the ProductOption resource. */
  admin_putProductOptionItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductOption resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductOption.jsonld-admin.product_option.read"];
          "application/json": components["schemas"]["ProductOption-admin.product_option.read"];
          "text/html": components["schemas"]["ProductOption-admin.product_option.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ProductOption resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ProductOption.jsonld-admin.product_option.update"];
        "application/json": components["schemas"]["ProductOption-admin.product_option.update"];
        "text/html": components["schemas"]["ProductOption-admin.product_option.update"];
      };
    };
  };
  /** Retrieves a ProductOption resource. */
  api_product_options_values_get_subresourceProductOptionSubresource: {
    parameters: {
      path: {
        /** ProductOption identifier */
        code: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** ProductOption resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ProductOptionValue.jsonld-admin.product_option_value.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ProductOptionValue-admin.product_option_value.read"][];
          "text/html": components["schemas"]["ProductOptionValue-admin.product_option_value.read"][];
        };
      };
    };
  };
  /** Retrieves the collection of ProductReview resources. */
  admin_getProductReviewCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** ProductReview collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ProductReview.jsonld-admin.product_review.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ProductReview-admin.product_review.read"][];
          "text/html": components["schemas"]["ProductReview-admin.product_review.read"][];
        };
      };
    };
  };
  /** Retrieves a ProductReview resource. */
  admin_getProductReviewItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductReview resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductReview.jsonld-admin.product_review.read"];
          "application/json": components["schemas"]["ProductReview-admin.product_review.read"];
          "text/html": components["schemas"]["ProductReview-admin.product_review.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the ProductReview resource. */
  admin_putProductReviewItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductReview resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductReview.jsonld"];
          "application/json": components["schemas"]["ProductReview"];
          "text/html": components["schemas"]["ProductReview"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ProductReview resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ProductReview.jsonld-admin.product_review.update"];
        "application/json": components["schemas"]["ProductReview-admin.product_review.update"];
        "text/html": components["schemas"]["ProductReview-admin.product_review.update"];
      };
    };
  };
  /** Removes the ProductReview resource. */
  admin_deleteProductReviewItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductReview resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Updates the ProductReview resource. */
  admin_acceptProductReviewItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductReview resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductReview.jsonld"];
          "application/json": components["schemas"]["ProductReview"];
          "text/html": components["schemas"]["ProductReview"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ProductReview resource */
    requestBody: {
      content: {
        "application/merge-patch+json": unknown;
      };
    };
  };
  /** Updates the ProductReview resource. */
  admin_rejectProductReviewItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductReview resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductReview.jsonld"];
          "application/json": components["schemas"]["ProductReview"];
          "text/html": components["schemas"]["ProductReview"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ProductReview resource */
    requestBody: {
      content: {
        "application/merge-patch+json": unknown;
      };
    };
  };
  /** Retrieves the collection of ProductTaxon resources. */
  admin_getProductTaxonCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** ProductTaxon collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ProductTaxon.jsonld-admin.product_taxon.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ProductTaxon-admin.product_taxon.read"][];
          "text/html": components["schemas"]["ProductTaxon-admin.product_taxon.read"][];
        };
      };
    };
  };
  /** Retrieves a ProductTaxon resource. */
  admin_getProductTaxonItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductTaxon resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductTaxon.jsonld-admin.product_taxon.read"];
          "application/json": components["schemas"]["ProductTaxon-admin.product_taxon.read"];
          "text/html": components["schemas"]["ProductTaxon-admin.product_taxon.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ProductTranslation resource. */
  admin_getProductTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductTranslation.jsonld"];
          "application/json": components["schemas"]["ProductTranslation"];
          "text/html": components["schemas"]["ProductTranslation"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ProductVariantTranslation resource. */
  admin_getProductVariantTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductVariantTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductVariantTranslation.jsonld"];
          "application/json": components["schemas"]["ProductVariantTranslation"];
          "text/html": components["schemas"]["ProductVariantTranslation"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of ProductVariant resources. */
  admin_getProductVariantCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** ProductVariant collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ProductVariant.jsonld-admin.product_variant.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ProductVariant-admin.product_variant.read"][];
          "text/html": components["schemas"]["ProductVariant-admin.product_variant.read"][];
        };
      };
    };
  };
  /** Creates a ProductVariant resource. */
  admin_postProductVariantCollection: {
    parameters: {};
    responses: {
      /** ProductVariant resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["ProductVariant.jsonld-admin.product_variant.create"];
          "application/json": components["schemas"]["ProductVariant-admin.product_variant.create"];
          "text/html": components["schemas"]["ProductVariant-admin.product_variant.create"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new ProductVariant resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ProductVariant.jsonld-admin.product_variant.create"];
        "application/json": components["schemas"]["ProductVariant-admin.product_variant.create"];
        "text/html": components["schemas"]["ProductVariant-admin.product_variant.create"];
      };
    };
  };
  /** Retrieves a ProductVariant resource. */
  admin_getProductVariantItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductVariant resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductVariant.jsonld-admin.product_variant.read"];
          "application/json": components["schemas"]["ProductVariant-admin.product_variant.read"];
          "text/html": components["schemas"]["ProductVariant-admin.product_variant.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the ProductVariant resource. */
  admin_putProductVariantItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductVariant resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductVariant.jsonld-admin.product_variant.read"];
          "application/json": components["schemas"]["ProductVariant-admin.product_variant.read"];
          "text/html": components["schemas"]["ProductVariant-admin.product_variant.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ProductVariant resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ProductVariant.jsonld-admin.product_variant.update"];
        "application/json": components["schemas"]["ProductVariant-admin.product_variant.update"];
        "text/html": components["schemas"]["ProductVariant-admin.product_variant.update"];
      };
    };
  };
  /** Retrieves the collection of Product resources. */
  admin_getProductCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
        "translations.name"?: string;
        "order[code]"?: "asc" | "desc";
        "order[createdAt]"?: "asc" | "desc";
        "productTaxons.taxon.code"?: string;
        "productTaxons.taxon.code[]"?: string[];
        "order[translation.name]"?: "asc" | "desc";
        "localeCode for order[translation.name]"?: string;
      };
    };
    responses: {
      /** Product collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Product.jsonld-admin.product.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Product-admin.product.read"][];
          "text/html": components["schemas"]["Product-admin.product.read"][];
        };
      };
    };
  };
  /** Creates a Product resource. */
  admin_postProductCollection: {
    parameters: {};
    responses: {
      /** Product resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Product.jsonld"];
          "application/json": components["schemas"]["Product"];
          "text/html": components["schemas"]["Product"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Product resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Product.jsonld-admin.product.create"];
        "application/json": components["schemas"]["Product-admin.product.create"];
        "text/html": components["schemas"]["Product-admin.product.create"];
      };
    };
  };
  /** Retrieves a Product resource. */
  admin_getProductItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Product resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Product.jsonld-admin.product.read"];
          "application/json": components["schemas"]["Product-admin.product.read"];
          "text/html": components["schemas"]["Product-admin.product.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the Product resource. */
  admin_putProductItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Product resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Product.jsonld"];
          "application/json": components["schemas"]["Product"];
          "text/html": components["schemas"]["Product"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Product resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Product.jsonld-admin.product.update"];
        "application/json": components["schemas"]["Product-admin.product.update"];
        "text/html": components["schemas"]["Product-admin.product.update"];
      };
    };
  };
  /** Removes the Product resource. */
  admin_deleteProductItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Product resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Promotion resources. */
  admin_getPromotionCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Promotion collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Promotion.jsonld-admin.promotion.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Promotion-admin.promotion.read"][];
          "text/html": components["schemas"]["Promotion-admin.promotion.read"][];
        };
      };
    };
  };
  /** Creates a Promotion resource. */
  admin_postPromotionCollection: {
    parameters: {};
    responses: {
      /** Promotion resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Promotion.jsonld"];
          "application/json": components["schemas"]["Promotion"];
          "text/html": components["schemas"]["Promotion"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Promotion resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Promotion.jsonld-admin.promotion.create"];
        "application/json": components["schemas"]["Promotion-admin.promotion.create"];
        "text/html": components["schemas"]["Promotion-admin.promotion.create"];
      };
    };
  };
  /** Retrieves a Promotion resource. */
  admin_getPromotionItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Promotion resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Promotion.jsonld-admin.promotion.read"];
          "application/json": components["schemas"]["Promotion-admin.promotion.read"];
          "text/html": components["schemas"]["Promotion-admin.promotion.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Removes the Promotion resource. */
  admin_deletePromotionItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Promotion resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Province resource. */
  admin_getProvinceItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Province resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Province.jsonld-admin.province.read"];
          "application/json": components["schemas"]["Province-admin.province.read"];
          "text/html": components["schemas"]["Province-admin.province.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the Province resource. */
  admin_putProvinceItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Province resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Province.jsonld"];
          "application/json": components["schemas"]["Province"];
          "text/html": components["schemas"]["Province"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Province resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Province.jsonld"];
        "application/json": components["schemas"]["Province"];
        "text/html": components["schemas"]["Province"];
      };
    };
  };
  /** Retrieves the collection of Shipment resources. */
  admin_getShipmentCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
        state?: string;
        "state[]"?: string[];
        "order.channel.code"?: string;
        "order.channel.code[]"?: string[];
        "method.code"?: string;
        "method.code[]"?: string[];
      };
    };
    responses: {
      /** Shipment collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Shipment.jsonld-admin.shipment.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Shipment-admin.shipment.read"][];
          "text/html": components["schemas"]["Shipment-admin.shipment.read"][];
        };
      };
    };
  };
  /** Retrieves a Shipment resource. */
  admin_getShipmentItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Shipment resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Shipment.jsonld-admin.shipment.read"];
          "application/json": components["schemas"]["Shipment-admin.shipment.read"];
          "text/html": components["schemas"]["Shipment-admin.shipment.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Updates the Shipment resource. */
  admin_shipShipmentItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Shipment resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Shipment.jsonld"];
          "application/json": components["schemas"]["Shipment"];
          "text/html": components["schemas"]["Shipment"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Shipment resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Shipment.ShipShipment-admin.shipment.update"];
      };
    };
  };
  /** Retrieves the collection of ShippingCategory resources. */
  admin_getShippingCategoryCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** ShippingCategory collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ShippingCategory.jsonld-admin.shipping_category.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ShippingCategory-admin.shipping_category.read"][];
          "text/html": components["schemas"]["ShippingCategory-admin.shipping_category.read"][];
        };
      };
    };
  };
  /** Creates a ShippingCategory resource. */
  admin_postShippingCategoryCollection: {
    parameters: {};
    responses: {
      /** ShippingCategory resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["ShippingCategory.jsonld"];
          "application/json": components["schemas"]["ShippingCategory"];
          "text/html": components["schemas"]["ShippingCategory"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new ShippingCategory resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ShippingCategory.jsonld-admin.shipping_category.create"];
        "application/json": components["schemas"]["ShippingCategory-admin.shipping_category.create"];
        "text/html": components["schemas"]["ShippingCategory-admin.shipping_category.create"];
      };
    };
  };
  /** Retrieves a ShippingCategory resource. */
  admin_getShippingCategoryItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ShippingCategory resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShippingCategory.jsonld-admin.shipping_category.read"];
          "application/json": components["schemas"]["ShippingCategory-admin.shipping_category.read"];
          "text/html": components["schemas"]["ShippingCategory-admin.shipping_category.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the ShippingCategory resource. */
  admin_putShippingCategoryItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ShippingCategory resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShippingCategory.jsonld"];
          "application/json": components["schemas"]["ShippingCategory"];
          "text/html": components["schemas"]["ShippingCategory"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ShippingCategory resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ShippingCategory.jsonld-admin.shipping_category.update"];
        "application/json": components["schemas"]["ShippingCategory-admin.shipping_category.update"];
        "text/html": components["schemas"]["ShippingCategory-admin.shipping_category.update"];
      };
    };
  };
  /** Removes the ShippingCategory resource. */
  admin_deleteShippingCategoryItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ShippingCategory resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ShippingMethodTranslation resource. */
  admin_getShippingMethodTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ShippingMethodTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShippingMethodTranslation.jsonld"];
          "application/json": components["schemas"]["ShippingMethodTranslation"];
          "text/html": components["schemas"]["ShippingMethodTranslation"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of ShippingMethod resources. */
  admin_getShippingMethodCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
        "exists[archivedAt]"?: boolean;
        "order[code]"?: "asc" | "desc";
        "order[translation.name]"?: "asc" | "desc";
        "localeCode for order[translation.name]"?: string;
      };
    };
    responses: {
      /** ShippingMethod collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ShippingMethod.jsonld-admin.shipping_method.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ShippingMethod-admin.shipping_method.read"][];
          "text/html": components["schemas"]["ShippingMethod-admin.shipping_method.read"][];
        };
      };
    };
  };
  /** Creates a ShippingMethod resource. */
  admin_postShippingMethodCollection: {
    parameters: {};
    responses: {
      /** ShippingMethod resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["ShippingMethod.jsonld-admin.shipping_method.read"];
          "application/json": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
          "text/html": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new ShippingMethod resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ShippingMethod.jsonld-admin.shipping_method.create"];
        "application/json": components["schemas"]["ShippingMethod-admin.shipping_method.create"];
        "text/html": components["schemas"]["ShippingMethod-admin.shipping_method.create"];
      };
    };
  };
  /** Retrieves a ShippingMethod resource. */
  admin_getShippingMethodItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ShippingMethod resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShippingMethod.jsonld-admin.shipping_method.read"];
          "application/json": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
          "text/html": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the ShippingMethod resource. */
  admin_putShippingMethodItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ShippingMethod resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShippingMethod.jsonld-admin.shipping_method.read"];
          "application/json": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
          "text/html": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ShippingMethod resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ShippingMethod.jsonld-admin.shipping_method.update"];
        "application/json": components["schemas"]["ShippingMethod-admin.shipping_method.update"];
        "text/html": components["schemas"]["ShippingMethod-admin.shipping_method.update"];
      };
    };
  };
  /** Removes the ShippingMethod resource. */
  admin_deleteShippingMethodItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ShippingMethod resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Updates the ShippingMethod resource. */
  admin_archiveShippingMethodItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ShippingMethod resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShippingMethod.jsonld-admin.shipping_method.read"];
          "application/json": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
          "text/html": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ShippingMethod resource */
    requestBody: {
      content: {
        "application/merge-patch+json": unknown;
      };
    };
  };
  /** Updates the ShippingMethod resource. */
  admin_restoreShippingMethodItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ShippingMethod resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShippingMethod.jsonld-admin.shipping_method.read"];
          "application/json": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
          "text/html": components["schemas"]["ShippingMethod-admin.shipping_method.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ShippingMethod resource */
    requestBody: {
      content: {
        "application/merge-patch+json": unknown;
      };
    };
  };
  /** Retrieves a ShopBillingData resource. */
  admin_getShopBillingDataItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ShopBillingData resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShopBillingData.jsonld-admin.shop_billing_data.read"];
          "application/json": components["schemas"]["ShopBillingData-admin.shop_billing_data.read"];
          "text/html": components["schemas"]["ShopBillingData-admin.shop_billing_data.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of TaxCategory resources. */
  admin_getTaxCategoryCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** TaxCategory collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["TaxCategory.jsonld-admin.tax_category.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["TaxCategory-admin.tax_category.read"][];
          "text/html": components["schemas"]["TaxCategory-admin.tax_category.read"][];
        };
      };
    };
  };
  /** Creates a TaxCategory resource. */
  admin_postTaxCategoryCollection: {
    parameters: {};
    responses: {
      /** TaxCategory resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["TaxCategory.jsonld"];
          "application/json": components["schemas"]["TaxCategory"];
          "text/html": components["schemas"]["TaxCategory"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new TaxCategory resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["TaxCategory.jsonld-admin.tax_category.create"];
        "application/json": components["schemas"]["TaxCategory-admin.tax_category.create"];
        "text/html": components["schemas"]["TaxCategory-admin.tax_category.create"];
      };
    };
  };
  /** Retrieves a TaxCategory resource. */
  admin_getTaxCategoryItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** TaxCategory resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["TaxCategory.jsonld-admin.tax_category.read"];
          "application/json": components["schemas"]["TaxCategory-admin.tax_category.read"];
          "text/html": components["schemas"]["TaxCategory-admin.tax_category.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the TaxCategory resource. */
  admin_putTaxCategoryItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** TaxCategory resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["TaxCategory.jsonld"];
          "application/json": components["schemas"]["TaxCategory"];
          "text/html": components["schemas"]["TaxCategory"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated TaxCategory resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["TaxCategory.jsonld-admin.tax_category.update"];
        "application/json": components["schemas"]["TaxCategory-admin.tax_category.update"];
        "text/html": components["schemas"]["TaxCategory-admin.tax_category.update"];
      };
    };
  };
  /** Removes the TaxCategory resource. */
  admin_deleteTaxCategoryItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** TaxCategory resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of TaxonTranslation resources. */
  admin_getTaxonTranslationCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** TaxonTranslation collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["TaxonTranslation.jsonld-admin.taxon.read_admin.taxon_translation.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["TaxonTranslation-admin.taxon.read_admin.taxon_translation.read"][];
          "text/html": components["schemas"]["TaxonTranslation-admin.taxon.read_admin.taxon_translation.read"][];
        };
      };
    };
  };
  /** Retrieves a TaxonTranslation resource. */
  admin_getTaxonTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** TaxonTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["TaxonTranslation.jsonld-admin.taxon.read_admin.taxon_translation.read"];
          "application/json": components["schemas"]["TaxonTranslation-admin.taxon.read_admin.taxon_translation.read"];
          "text/html": components["schemas"]["TaxonTranslation-admin.taxon.read_admin.taxon_translation.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Taxon resources. */
  admin_getTaxonCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Taxon collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Taxon.jsonld-admin.taxon.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Taxon-admin.taxon.read"][];
          "text/html": components["schemas"]["Taxon-admin.taxon.read"][];
        };
      };
    };
  };
  /** Creates a Taxon resource. */
  admin_postTaxonCollection: {
    parameters: {};
    responses: {
      /** Taxon resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Taxon.jsonld"];
          "application/json": components["schemas"]["Taxon"];
          "text/html": components["schemas"]["Taxon"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Taxon resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Taxon.jsonld-admin.taxon.create"];
        "application/json": components["schemas"]["Taxon-admin.taxon.create"];
        "text/html": components["schemas"]["Taxon-admin.taxon.create"];
      };
    };
  };
  /** Retrieves a Taxon resource. */
  admin_getTaxonItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Taxon resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Taxon.jsonld-admin.taxon.read"];
          "application/json": components["schemas"]["Taxon-admin.taxon.read"];
          "text/html": components["schemas"]["Taxon-admin.taxon.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the Taxon resource. */
  admin_putTaxonItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Taxon resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Taxon.jsonld"];
          "application/json": components["schemas"]["Taxon"];
          "text/html": components["schemas"]["Taxon"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Taxon resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Taxon.jsonld-admin.taxon.update"];
        "application/json": components["schemas"]["Taxon-admin.taxon.update"];
        "text/html": components["schemas"]["Taxon-admin.taxon.update"];
      };
    };
  };
  /** Retrieves a ZoneMember resource. */
  admin_getZoneMemberItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ZoneMember resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ZoneMember.jsonld-admin.zone_member.read"];
          "application/json": components["schemas"]["ZoneMember-admin.zone_member.read"];
          "text/html": components["schemas"]["ZoneMember-admin.zone_member.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Zone resources. */
  admin_getZoneCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Zone collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Zone.jsonld-admin.zone.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Zone-admin.zone.read"][];
          "text/html": components["schemas"]["Zone-admin.zone.read"][];
        };
      };
    };
  };
  /** Creates a Zone resource. */
  admin_postZoneCollection: {
    parameters: {};
    responses: {
      /** Zone resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Zone.jsonld"];
          "application/json": components["schemas"]["Zone"];
          "text/html": components["schemas"]["Zone"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Zone resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Zone.jsonld-admin.zone.create"];
        "application/json": components["schemas"]["Zone-admin.zone.create"];
        "text/html": components["schemas"]["Zone-admin.zone.create"];
      };
    };
  };
  /** Retrieves a Zone resource. */
  admin_getZoneItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Zone resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Zone.jsonld-admin.zone.read"];
          "application/json": components["schemas"]["Zone-admin.zone.read"];
          "text/html": components["schemas"]["Zone-admin.zone.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the Zone resource. */
  admin_putZoneItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Zone resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Zone.jsonld"];
          "application/json": components["schemas"]["Zone"];
          "text/html": components["schemas"]["Zone"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Zone resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Zone.jsonld-admin.zone.update"];
        "application/json": components["schemas"]["Zone-admin.zone.update"];
        "text/html": components["schemas"]["Zone-admin.zone.update"];
      };
    };
  };
  /** Removes the Zone resource. */
  admin_deleteZoneItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Zone resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Zone resource. */
  api_zones_members_get_subresourceZoneSubresource: {
    parameters: {
      path: {
        /** Zone identifier */
        code: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Zone resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ZoneMember.jsonld"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ZoneMember"][];
          "text/html": components["schemas"]["ZoneMember"][];
        };
      };
    };
  };
  /** Creates a VerifyCustomerAccount resource. */
  shop_resend_verification_emailVerifyCustomerAccountCollection: {
    parameters: {};
    responses: {
      /** VerifyCustomerAccount resource created */
      202: {
        content: {
          "application/ld+json": unknown;
          "application/json": unknown;
          "text/html": unknown;
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new VerifyCustomerAccount resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["VerifyCustomerAccount.ResendVerificationEmail.jsonld-shop.resend_verification_email.create"];
        "application/json": components["schemas"]["VerifyCustomerAccount.ResendVerificationEmail-shop.resend_verification_email.create"];
        "text/html": components["schemas"]["VerifyCustomerAccount.ResendVerificationEmail-shop.resend_verification_email.create"];
      };
    };
  };
  /** Updates the VerifyCustomerAccount resource. */
  shop_verify_customer_accountVerifyCustomerAccountItem: {
    parameters: {
      path: {
        /** Resource identifier */
        token: string;
      };
    };
    responses: {
      /** VerifyCustomerAccount resource updated */
      202: {
        content: {
          "application/ld+json": unknown;
          "application/json": unknown;
          "text/html": unknown;
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated VerifyCustomerAccount resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["VerifyCustomerAccount-shop.account_verification.update"];
      };
    };
  };
  /** Updates the Order resource. */
  shop_account_change_payment_methodOrderItem: {
    parameters: {
      path: {
        tokenValue: string;
        paymentId: string;
      };
    };
    responses: {
      /** Order resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-shop.order.account.read"];
          "application/json": components["schemas"]["Order-shop.order.account.read"];
          "text/html": components["schemas"]["Order-shop.order.account.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Order resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Order.ChangePaymentMethod-shop.order.account.change_payment_method"];
      };
    };
  };
  /** Retrieves the collection of Address resources. */
  shop_getAddressCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Address collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Address.jsonld-shop.address.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Address-shop.address.read"][];
          "text/html": components["schemas"]["Address-shop.address.read"][];
        };
      };
    };
  };
  /** Creates a Address resource. */
  shop_postAddressCollection: {
    parameters: {};
    responses: {
      /** Address resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Address.jsonld-shop.address.create"];
          "application/json": components["schemas"]["Address-shop.address.create"];
          "text/html": components["schemas"]["Address-shop.address.create"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Address resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Address.jsonld"];
        "application/json": components["schemas"]["Address"];
        "text/html": components["schemas"]["Address"];
      };
    };
  };
  /** Retrieves a Address resource. */
  shop_getAddressItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Address resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Address.jsonld-shop.address.read"];
          "application/json": components["schemas"]["Address-shop.address.read"];
          "text/html": components["schemas"]["Address-shop.address.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the Address resource. */
  shop_putAddressItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Address resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Address.jsonld"];
          "application/json": components["schemas"]["Address"];
          "text/html": components["schemas"]["Address"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Address resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Address.jsonld-shop.address.update"];
        "application/json": components["schemas"]["Address-shop.address.update"];
        "text/html": components["schemas"]["Address-shop.address.update"];
      };
    };
  };
  /** Removes the Address resource. */
  shop_deleteAddressItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Address resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Adjustment resource. */
  shop_getAdjustmentItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Adjustment resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Adjustment.jsonld-shop.adjustment.read"];
          "application/json": components["schemas"]["Adjustment-shop.adjustment.read"];
          "text/html": components["schemas"]["Adjustment-shop.adjustment.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a CatalogPromotion resource. */
  shop_getCatalogPromotionItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** CatalogPromotion resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["CatalogPromotion.jsonld-shop.catalog_promotion.read"];
          "application/json": components["schemas"]["CatalogPromotion-shop.catalog_promotion.read"];
          "text/html": components["schemas"]["CatalogPromotion-shop.catalog_promotion.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Channel resource. */
  shop_getChannelItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Channel resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Channel.jsonld-shop.channel.read"];
          "application/json": components["schemas"]["Channel-shop.channel.read"];
          "text/html": components["schemas"]["Channel-shop.channel.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Country resources. */
  shop_getCountryCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Country collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Country.jsonld-shop.country.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Country-shop.country.read"][];
          "text/html": components["schemas"]["Country-shop.country.read"][];
        };
      };
    };
  };
  /** Retrieves a Country resource. */
  shop_getCountryItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Country resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Country.jsonld-shop.country.read"];
          "application/json": components["schemas"]["Country-shop.country.read"];
          "text/html": components["schemas"]["Country-shop.country.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Currency resources. */
  shop_getCurrencyCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Currency collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Currency.jsonld-shop.currency.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Currency-shop.currency.read"][];
          "text/html": components["schemas"]["Currency-shop.currency.read"][];
        };
      };
    };
  };
  /** Retrieves a Currency resource. */
  shop_getCurrencyItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Currency resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Currency.jsonld-shop.currency.read"];
          "application/json": components["schemas"]["Currency-shop.currency.read"];
          "text/html": components["schemas"]["Currency-shop.currency.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Creates a Customer resource. */
  shop_postCustomerCollection: {
    parameters: {};
    responses: {
      /** Customer resource created */
      204: {
        content: {
          "application/ld+json": unknown;
          "application/json": unknown;
          "text/html": unknown;
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Customer resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Customer.RegisterShopUser.jsonld-shop.customer.create"];
        "application/json": components["schemas"]["Customer.RegisterShopUser-shop.customer.create"];
        "text/html": components["schemas"]["Customer.RegisterShopUser-shop.customer.create"];
      };
    };
  };
  /** Retrieves a Customer resource. */
  shop_getCustomerItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Customer resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Customer.jsonld-shop.customer.read"];
          "application/json": components["schemas"]["Customer-shop.customer.read"];
          "text/html": components["schemas"]["Customer-shop.customer.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the Customer resource. */
  shop_putCustomerItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Customer resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Customer.jsonld-shop.customer.read"];
          "application/json": components["schemas"]["Customer-shop.customer.read"];
          "text/html": components["schemas"]["Customer-shop.customer.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Customer resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Customer.jsonld-shop.customer.update"];
        "application/json": components["schemas"]["Customer-shop.customer.update"];
        "text/html": components["schemas"]["Customer-shop.customer.update"];
      };
    };
  };
  /** Replaces the Customer resource. */
  shop_password_updateCustomerItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Customer resource updated */
      204: {
        content: {
          "application/ld+json": unknown;
          "application/json": unknown;
          "text/html": unknown;
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Customer resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Customer.ChangeShopUserPassword.jsonld-shop.customer.password.update"];
        "application/json": components["schemas"]["Customer.ChangeShopUserPassword-shop.customer.password.update"];
        "text/html": components["schemas"]["Customer.ChangeShopUserPassword-shop.customer.password.update"];
      };
    };
  };
  /** Retrieves the collection of Locale resources. */
  shop_getLocaleCollection: {
    parameters: {};
    responses: {
      /** Locale collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Locale.jsonld-shop.locale.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Locale-shop.locale.read"][];
          "text/html": components["schemas"]["Locale-shop.locale.read"][];
        };
      };
    };
  };
  /** Retrieves a Locale resource. */
  shop_getLocaleItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Locale resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Locale.jsonld-shop.locale.read"];
          "application/json": components["schemas"]["Locale-shop.locale.read"];
          "text/html": components["schemas"]["Locale-shop.locale.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a OrderItemUnit resource. */
  shop_getOrderItemUnitItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** OrderItemUnit resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["OrderItemUnit.jsonld-shop.order_item_unit.read"];
          "application/json": components["schemas"]["OrderItemUnit-shop.order_item_unit.read"];
          "text/html": components["schemas"]["OrderItemUnit-shop.order_item_unit.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a OrderItem resource. */
  shop_getOrderItemItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** OrderItem resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["OrderItem.jsonld-shop.cart.read"];
          "application/json": components["schemas"]["OrderItem-shop.cart.read"];
          "text/html": components["schemas"]["OrderItem-shop.cart.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Order resources. */
  shop_getOrderCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Order collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Order.jsonld-shop.order.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Order-shop.order.read"][];
          "text/html": components["schemas"]["Order-shop.order.read"][];
        };
      };
    };
  };
  /** Creates a Order resource. */
  shop_postOrderCollection: {
    parameters: {};
    responses: {
      /** Order resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-admin.order.read"];
          "application/json": components["schemas"]["Order-admin.order.read"];
          "text/html": components["schemas"]["Order-admin.order.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Order resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Order.PickupCart.jsonld-shop.order.create"];
        "application/json": components["schemas"]["Order.PickupCart-shop.order.create"];
        "text/html": components["schemas"]["Order.PickupCart-shop.order.create"];
      };
    };
  };
  /** Retrieves a Order resource. */
  shop_getOrderItem: {
    parameters: {
      path: {
        /** Resource identifier */
        tokenValue: string;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-shop.cart.read"];
          "application/json": components["schemas"]["Order-shop.cart.read"];
          "text/html": components["schemas"]["Order-shop.cart.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Replaces the Order resource. */
  shop_putOrderItem: {
    parameters: {
      path: {
        /** Resource identifier */
        tokenValue: string;
      };
    };
    responses: {
      /** Order resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-shop.cart.read"];
          "application/json": components["schemas"]["Order-shop.cart.read"];
          "text/html": components["schemas"]["Order-shop.cart.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Order resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Order.UpdateCart.jsonld-shop.cart.update"];
        "application/json": components["schemas"]["Order.UpdateCart-shop.cart.update"];
        "text/html": components["schemas"]["Order.UpdateCart-shop.cart.update"];
      };
    };
  };
  /** Removes the Order resource. */
  shop_deleteOrderItem: {
    parameters: {
      path: {
        /** Resource identifier */
        tokenValue: string;
      };
    };
    responses: {
      /** Order resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Order resource. */
  api_orders_adjustments_get_subresourceOrderSubresource: {
    parameters: {
      path: {
        /** Order identifier */
        tokenValue: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Adjustment.jsonld-shop.cart.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Adjustment-shop.cart.read"][];
          "text/html": components["schemas"]["Adjustment-shop.cart.read"][];
        };
      };
    };
  };
  /** Updates the Order resource. */
  shop_completeOrderItem: {
    parameters: {
      path: {
        /** Resource identifier */
        tokenValue: string;
      };
    };
    responses: {
      /** Order resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-shop.cart.read"];
          "application/json": components["schemas"]["Order-shop.cart.read"];
          "text/html": components["schemas"]["Order-shop.cart.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Order resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Order.CompleteOrder-shop.cart.complete"];
      };
    };
  };
  /** Retrieves a Order resource. */
  api_orders_items_get_subresourceOrderSubresource: {
    parameters: {
      path: {
        /** Order identifier */
        tokenValue: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["OrderItem.jsonld-shop.cart.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["OrderItem-shop.cart.read"][];
          "text/html": components["schemas"]["OrderItem-shop.cart.read"][];
        };
      };
    };
  };
  /** Creates a Order resource. */
  shop_add_itemOrderItem: {
    parameters: {
      path: {
        /** Resource identifier */
        tokenValue: string;
      };
    };
    responses: {
      /** Order resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-shop.cart.read"];
          "application/json": components["schemas"]["Order-shop.cart.read"];
          "text/html": components["schemas"]["Order-shop.cart.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new Order resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Order.AddItemToCart.jsonld-shop.cart.add_item"];
        "application/json": components["schemas"]["Order.AddItemToCart-shop.cart.add_item"];
        "text/html": components["schemas"]["Order.AddItemToCart-shop.cart.add_item"];
      };
    };
  };
  /** Removes the Order resource. */
  shop_remove_itemOrderItem: {
    parameters: {
      path: {
        tokenValue: string;
        itemId: string;
      };
    };
    responses: {
      /** Order resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Order resource. */
  api_orders_items_adjustments_get_subresourceOrderSubresource: {
    parameters: {
      path: {
        /** Order identifier */
        tokenValue: string;
        /** OrderItem identifier */
        items: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Adjustment.jsonld-shop.cart.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Adjustment-shop.cart.read"][];
          "text/html": components["schemas"]["Adjustment-shop.cart.read"][];
        };
      };
    };
  };
  /** Updates the Order resource. */
  shop_change_quantityOrderItem: {
    parameters: {
      path: {
        tokenValue: string;
        orderItemId: string;
      };
    };
    responses: {
      /** Order resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-admin.order.read"];
          "application/json": components["schemas"]["Order-admin.order.read"];
          "text/html": components["schemas"]["Order-admin.order.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Order resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Order.ChangeItemQuantityInCart-shop.cart.change_quantity"];
      };
    };
  };
  /** Updates the Order resource. */
  shop_select_payment_methodOrderItem: {
    parameters: {
      path: {
        tokenValue: string;
        paymentId: string;
      };
    };
    responses: {
      /** Order resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-shop.cart.read"];
          "application/json": components["schemas"]["Order-shop.cart.read"];
          "text/html": components["schemas"]["Order-shop.cart.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Order resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Order.ChoosePaymentMethod-shop.cart.select_payment_method"];
      };
    };
  };
  /** Retrieves a Order resource. */
  get_configurationOrderItem: {
    parameters: {
      path: {
        tokenValue: string;
        paymentId: string;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-admin.order.read"];
          "application/json": components["schemas"]["Order-admin.order.read"];
          "text/html": components["schemas"]["Order-admin.order.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Order resource. */
  api_orders_payments_methods_get_subresourceOrderSubresource: {
    parameters: {
      path: {
        /** Order identifier */
        tokenValue: string;
        /** Payment identifier */
        payments: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["PaymentMethod.jsonld-shop.payment_method.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["PaymentMethod-shop.payment_method.read"][];
          "text/html": components["schemas"]["PaymentMethod-shop.payment_method.read"][];
        };
      };
    };
  };
  /** Updates the Order resource. */
  shop_select_shipping_methodOrderItem: {
    parameters: {
      path: {
        tokenValue: string;
        shipmentId: string;
      };
    };
    responses: {
      /** Order resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Order.jsonld-shop.cart.read"];
          "application/json": components["schemas"]["Order-shop.cart.read"];
          "text/html": components["schemas"]["Order-shop.cart.read"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated Order resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Order.ChooseShippingMethod-shop.cart.select_shipping_method"];
      };
    };
  };
  /** Retrieves a Order resource. */
  api_orders_shipments_methods_get_subresourceOrderSubresource: {
    parameters: {
      path: {
        /** Order identifier */
        tokenValue: string;
        /** Shipment identifier */
        shipments: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Order resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ShippingMethod.jsonld-shop.shipping_method.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ShippingMethod-shop.shipping_method.read"][];
          "text/html": components["schemas"]["ShippingMethod-shop.shipping_method.read"][];
        };
      };
    };
  };
  /** Retrieves a PaymentMethod resource. */
  shop_getPaymentMethodItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** PaymentMethod resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["PaymentMethod.jsonld-shop.payment_method.read"];
          "application/json": components["schemas"]["PaymentMethod-shop.payment_method.read"];
          "text/html": components["schemas"]["PaymentMethod-shop.payment_method.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Payment resource. */
  shop_getPaymentItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Payment resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Payment.jsonld-shop.payment.read"];
          "application/json": components["schemas"]["Payment-shop.payment.read"];
          "text/html": components["schemas"]["Payment-shop.payment.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Payment resource. */
  api_payments_methods_get_subresourcePaymentSubresource: {
    parameters: {
      path: {
        /** Payment identifier */
        id: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Payment resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["PaymentMethod.jsonld-shop.payment_method.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["PaymentMethod-shop.payment_method.read"][];
          "text/html": components["schemas"]["PaymentMethod-shop.payment_method.read"][];
        };
      };
    };
  };
  /** Retrieves a ProductImage resource. */
  shop_getProductImageItem: {
    parameters: {
      query: {
        /** Provide one of supported image liip imagine filters. */
        filter?: string;
      };
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductImage resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductImage.jsonld-shop.product_image.read"];
          "application/json": components["schemas"]["ProductImage-shop.product_image.read"];
          "text/html": components["schemas"]["ProductImage-shop.product_image.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ProductOptionValue resource. */
  shop_getProductOptionValueItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductOptionValue resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductOptionValue.jsonld-shop.product_option_value.read"];
          "application/json": components["schemas"]["ProductOptionValue-shop.product_option_value.read"];
          "text/html": components["schemas"]["ProductOptionValue-shop.product_option_value.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ProductOption resource. */
  shop_getProductOptionItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductOption resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductOption.jsonld-shop.product_option.read"];
          "application/json": components["schemas"]["ProductOption-shop.product_option.read"];
          "text/html": components["schemas"]["ProductOption-shop.product_option.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of ProductReview resources. */
  shop_getProductReviewCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
        reviewSubject?: string;
        "reviewSubject[]"?: string[];
        "order[createdAt]"?: "asc" | "desc";
      };
    };
    responses: {
      /** ProductReview collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ProductReview.jsonld"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ProductReview"][];
          "text/html": components["schemas"]["ProductReview"][];
        };
      };
    };
  };
  /** Creates a ProductReview resource. */
  shop_postProductReviewCollection: {
    parameters: {};
    responses: {
      /** ProductReview resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["ProductReview.jsonld"];
          "application/json": components["schemas"]["ProductReview"];
          "text/html": components["schemas"]["ProductReview"];
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new ProductReview resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ProductReview.AddProductReview.jsonld-shop.product_review.create"];
        "application/json": components["schemas"]["ProductReview.AddProductReview-shop.product_review.create"];
        "text/html": components["schemas"]["ProductReview.AddProductReview-shop.product_review.create"];
      };
    };
  };
  /** Retrieves a ProductReview resource. */
  shop_getProductReviewItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductReview resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductReview.jsonld-admin.product_review.read"];
          "application/json": components["schemas"]["ProductReview-admin.product_review.read"];
          "text/html": components["schemas"]["ProductReview-admin.product_review.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ProductTaxon resource. */
  shop_getProductTaxonItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductTaxon resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductTaxon.jsonld-shop.product_taxon.read"];
          "application/json": components["schemas"]["ProductTaxon-shop.product_taxon.read"];
          "text/html": components["schemas"]["ProductTaxon-shop.product_taxon.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ProductTranslation resource. */
  shop_getProductTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductTranslation.jsonld"];
          "application/json": components["schemas"]["ProductTranslation"];
          "text/html": components["schemas"]["ProductTranslation"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ProductVariantTranslation resource. */
  shop_getProductVariantTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ProductVariantTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductVariantTranslation.jsonld"];
          "application/json": components["schemas"]["ProductVariantTranslation"];
          "text/html": components["schemas"]["ProductVariantTranslation"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of ProductVariant resources. */
  shop_getProductVariantCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
        product?: string;
        "product[]"?: string[];
        optionValues?: string;
        "optionValues[]"?: string[];
      };
    };
    responses: {
      /** ProductVariant collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ProductVariant.jsonld-shop.product_variant.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ProductVariant-shop.product_variant.read"][];
          "text/html": components["schemas"]["ProductVariant-shop.product_variant.read"][];
        };
      };
    };
  };
  /** Retrieves a ProductVariant resource. */
  shop_getProductVariantItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ProductVariant resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ProductVariant.jsonld-shop.product_variant.read"];
          "application/json": components["schemas"]["ProductVariant-shop.product_variant.read"];
          "text/html": components["schemas"]["ProductVariant-shop.product_variant.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Product resources. */
  shop_getProductCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
        "translations.name"?: string;
        "order[code]"?: "asc" | "desc";
        "order[createdAt]"?: "asc" | "desc";
        "productTaxons.taxon.code"?: string;
        "productTaxons.taxon.code[]"?: string[];
        "order[price]"?: "asc" | "desc";
        "order[translation.name]"?: "asc" | "desc";
        "localeCode for order[translation.name]"?: string;
        taxon?: string;
      };
    };
    responses: {
      /** Product collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Product.jsonld-shop.product.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Product-shop.product.read"][];
          "text/html": components["schemas"]["Product-shop.product.read"][];
        };
      };
    };
  };
  /** Retrieves a Product resource. */
  shop_get_by_slugProductItem: {
    parameters: {
      path: {
        slug: string;
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Product resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Product.jsonld-shop.product.read"];
          "application/json": components["schemas"]["Product-shop.product.read"];
          "text/html": components["schemas"]["Product-shop.product.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Product resource. */
  shop_getProductItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Product resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Product.jsonld-shop.product.read"];
          "application/json": components["schemas"]["Product-shop.product.read"];
          "text/html": components["schemas"]["Product-shop.product.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Creates a ResetPasswordRequest resource. */
  shop_create_reset_password_requestResetPasswordRequestCollection: {
    parameters: {};
    responses: {
      /** ResetPasswordRequest resource created */
      202: {
        content: {
          "application/ld+json": unknown;
          "application/json": unknown;
          "text/html": unknown;
        };
      };
      /** Invalid input */
      400: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The new ResetPasswordRequest resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ResetPasswordRequest.RequestResetPasswordToken.jsonld-shop.reset_password.create"];
        "application/json": components["schemas"]["ResetPasswordRequest.RequestResetPasswordToken-shop.reset_password.create"];
        "text/html": components["schemas"]["ResetPasswordRequest.RequestResetPasswordToken-shop.reset_password.create"];
      };
    };
  };
  /** Updates the ResetPasswordRequest resource. */
  shop_update_reset_password_requestResetPasswordRequestItem: {
    parameters: {
      path: {
        /** Resource identifier */
        resetPasswordToken: string;
      };
    };
    responses: {
      /** ResetPasswordRequest resource updated */
      202: {
        content: {
          "application/ld+json": unknown;
          "application/json": unknown;
          "text/html": unknown;
        };
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
    /** The updated ResetPasswordRequest resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["ResetPasswordRequest-shop.reset_password.update"];
      };
    };
  };
  /** Retrieves a Shipment resource. */
  shop_getShipmentItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** Shipment resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Shipment.jsonld-shop.shipment.read"];
          "application/json": components["schemas"]["Shipment-shop.shipment.read"];
          "text/html": components["schemas"]["Shipment-shop.shipment.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a Shipment resource. */
  api_shipments_methods_get_subresourceShipmentSubresource: {
    parameters: {
      path: {
        /** Shipment identifier */
        id: string;
      };
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Shipment resource */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ShippingMethod.jsonld-shop.shipping_method.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["ShippingMethod-shop.shipping_method.read"][];
          "text/html": components["schemas"]["ShippingMethod-shop.shipping_method.read"][];
        };
      };
    };
  };
  /** Retrieves a ShippingMethodTranslation resource. */
  shop_getShippingMethodTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** ShippingMethodTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShippingMethodTranslation.jsonld"];
          "application/json": components["schemas"]["ShippingMethodTranslation"];
          "text/html": components["schemas"]["ShippingMethodTranslation"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a ShippingMethod resource. */
  shop_getShippingMethodItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** ShippingMethod resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["ShippingMethod.jsonld-shop.shipping_method.read"];
          "application/json": components["schemas"]["ShippingMethod-shop.shipping_method.read"];
          "text/html": components["schemas"]["ShippingMethod-shop.shipping_method.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves a TaxonTranslation resource. */
  shop_getTaxonTranslationItem: {
    parameters: {
      path: {
        /** Resource identifier */
        id: string;
      };
    };
    responses: {
      /** TaxonTranslation resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["TaxonTranslation.jsonld-admin.taxon.read_shop.taxon_translation.read"];
          "application/json": components["schemas"]["TaxonTranslation-admin.taxon.read_shop.taxon_translation.read"];
          "text/html": components["schemas"]["TaxonTranslation-admin.taxon.read_shop.taxon_translation.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
  /** Retrieves the collection of Taxon resources. */
  shop_getTaxonCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
        /** The number of items per page */
        itemsPerPage?: number;
      };
    };
    responses: {
      /** Taxon collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Taxon.jsonld-shop.taxon.read"][];
            "hydra:totalItems"?: number;
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: {
                "@type"?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
              }[];
            };
          };
          "application/json": components["schemas"]["Taxon-shop.taxon.read"][];
          "text/html": components["schemas"]["Taxon-shop.taxon.read"][];
        };
      };
    };
  };
  /** Retrieves a Taxon resource. */
  shop_getTaxonItem: {
    parameters: {
      path: {
        /** Resource identifier */
        code: string;
      };
    };
    responses: {
      /** Taxon resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Taxon.jsonld-shop.taxon.read"];
          "application/json": components["schemas"]["Taxon-shop.taxon.read"];
          "text/html": components["schemas"]["Taxon-shop.taxon.read"];
        };
      };
      /** Resource not found */
      404: unknown;
    };
  };
}

export interface external {}
